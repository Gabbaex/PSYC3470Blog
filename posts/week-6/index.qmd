---
title: "Week 6: Data Summaries"
author: "Gabi Yepez"
date: "2023-03-15"
categories: [Data Summaries]
image: "data_summary.jpg"
---

## Data Summaries

```{r}
library(tidyverse)   # data wrangling functions
library(kableExtra)  # for nice tables
```

```{r}
tweets <- readRDS("ncod_tweets.rds")

glimpse(tweets)

hist(tweets$favorite_count) #fast way to get histogram

ggplot(tweets, aes(x=favorite_count))+geom_histogram()

library(dplyr)

filtered_data <- tweets %>%
  filter(favorite_count < 100) # thingy called pipe operator, sends data into next step aka filter

ggplot(tweets, aes(x=favorite_count))+geom_histogram()

```

```{r}
favourite_summary <- summarise(tweets,
                           mean_favs = mean(favorite_count),
                           median_favs = median(favorite_count),
                           min_favs = min(favorite_count),
                           max_favs = max(favorite_count),
                           sd_favs = sd(favorite_count),
                           mean_RTs = mean(retweet_count),
                           median_RTs = median(retweet_count),
                           min_RTs = min(retweet_count),
                           max_RTs = max(retweet_count),
                           sd_RTs = sd(favorite_count))

favourite_summary
```

```{r}
ggplot(tweets, aes(x = favorite_count)) +
  geom_histogram(bins = 25) +
  scale_x_continuous(trans = "pseudo_log", 
                     breaks = c(0, 1, 10, 100, 1000, 10000))
```

```{r}
tweet_summary <- tweets %>%
  summarise(mean_favs = mean(favorite_count),
            median_favs = quantile(favorite_count, .5),
            n = n(),
            min_date = min(created_at),
            max_date = max(created_at))

glimpse(tweet_summary)
```

```{r}
date_from <- tweet_summary$min_date %>% # inline code
  format("%d %B, %Y")
date_to <- tweet_summary$max_date %>% 
  format("%d %B, %Y")
```

```{r}
tweets_per_user <- tweets %>%
  count(screen_name, sort = TRUE)

head(tweets_per_user)
```

```{r}
unique_users <- nrow(tweets_per_user)
most_prolific <- slice(tweets_per_user, 1) %>% 
  pull(screen_name)
most_prolific_n <- slice(tweets_per_user, 1) %>% 
  pull(n)
```

```{r}
tweets_grouped <- tweets %>%
  group_by(verified)

verified <- tweets_grouped %>%
  summarise(count = n(),
            mean_favs = mean(favorite_count),
            mean_retweets = mean(retweet_count)) %>%
  ungroup()

verified
```

## Extra blogging challenge

```{r}
library(tidyverse)     # includes readr & tibble
library(rio)           # for almost any data import/export
library(haven)         # for SPSS, Stata,and SAS files
library(readxl)        # for Excel files
```

```{r}
data(package = "tidyr")
```

```{r}
data_census <- import("2018_Central_Park_Squirrel_Census_-_Squirrel_Data.csv")
```

```{r}
glimpse(data_census)

squirrel <- data_census$`Unique Squirrel ID`
color <- data_census$`Primary Fur Color`
food <- data_census$Eating
```

```{r}

ggplot(data_census, aes(x = squirrel, y = color)) + geom_point(color="black", shape=18, size = 4) + geom_point(color="lightgreen", shape=18, size = 2.5)

ggplot(data_census, aes(x = squirrel, y = food))+geom_col(linewidth = 3, fill = "firebrick")+scale_x_discrete(labels = abbreviate, limits = c("42C-AM-1007-02","36E-AM-1013-02","3F-PM-1013-03", "2F-PM-1014-03", "15G-PM-1019-01","1I-PM-1012-04","34A-PM-1013-04"))+ggtitle("Was the squirrel eating?")

```
