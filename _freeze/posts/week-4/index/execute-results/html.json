{
  "hash": "71ff3a5d602c082c4cf91852c3b1068e",
  "result": {
    "markdown": "---\ntitle: \"Week 4: Data Visualization\"\nauthor: \"Gabi Yepez\"\ndate: \"2023-03-01\"\ncategories: [Data Types, Tidy Data, ggplot2]\nimage: \"data_vis.png\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n:::\n\n\n## Data Types\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 2.5 # assigning character/variable\n\nclass(a) # find out it's numeric\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(a) # find out it's a double\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n\n```{.r .cell-code}\nis.integer(a) # find out it's not an integer (integers don't have decimals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nas.integer(a) # rounds (2.5) down to an integer (2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\nis.character(a) # find out if it's character or not\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninteger(length = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 0 0 0\n```\n:::\n\n```{.r .cell-code}\nnumeric(length = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 0 0 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# logical/boolean\ntypeof(TRUE) # uppercase true makes logical variables\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n\n```{.r .cell-code}\nclass(TRUE) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n\n```{.r .cell-code}\nis.logical(FALSE) # same with uppercase false\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nas.logical(1) # one will be seen as true\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nas.logical(0) # zero will be seen as false\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nlogical(length = 3) # initializes logical vector three times\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE FALSE\n```\n:::\n:::\n\n\n## Tidy Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tidy data must have every column a variable, every row an observation, and every cell a single value\nlibrary(tidyr)\n\natla <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\", \"Zuko\", \"Azula\", \"Suki\", \"Princess Yue\"),\n  bends = c(\"water\", \"earth\", NA, \"fire\", \"fire\", NA, \"water\"),\n  friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),\n  nation = c(\"water tribe\",\"earth kingdom\",\"water tribe\",\"fire nation\",\"fire nation\",\"earth kingdom\",\"water tribe\"),\n  personal_rating = c(7,10,5,8,2,10,6) # out of ten\n)\natla # tibble name prints table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 5\n  name         bends friendly nation        personal_rating\n  <chr>        <chr> <lgl>    <chr>                   <dbl>\n1 Katara       water TRUE     water tribe                 7\n2 Toph         earth TRUE     earth kingdom              10\n3 Sokka        <NA>  TRUE     water tribe                 5\n4 Zuko         fire  TRUE     fire nation                 8\n5 Azula        fire  FALSE    fire nation                 2\n6 Suki         <NA>  TRUE     earth kingdom              10\n7 Princess Yue water TRUE     water tribe                 6\n```\n:::\n\n```{.r .cell-code}\ntidyr::as_tibble(atla)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 5\n  name         bends friendly nation        personal_rating\n  <chr>        <chr> <lgl>    <chr>                   <dbl>\n1 Katara       water TRUE     water tribe                 7\n2 Toph         earth TRUE     earth kingdom              10\n3 Sokka        <NA>  TRUE     water tribe                 5\n4 Zuko         fire  TRUE     fire nation                 8\n5 Azula        fire  FALSE    fire nation                 2\n6 Suki         <NA>  TRUE     earth kingdom              10\n7 Princess Yue water TRUE     water tribe                 6\n```\n:::\n:::\n\n\n## ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\", show_col_types = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = survey_data, mapping = aes(x = wait_time, y = satisfaction))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(survey_data, aes(x = wait_time, y = satisfaction)) + geom_point(color=\"red\", shape=18, size = 5) + geom_point(color=\"black\", shape=18, size = 3) + geom_smooth(method = \"lm\", color=\"green\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(survey_data, aes(x = wait_time, y = satisfaction, color = wait_time, size = satisfaction)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmin(survey_data$wait_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 23\n```\n:::\n\n```{.r .cell-code}\nmax(survey_data$wait_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 314\n```\n:::\n\n```{.r .cell-code}\nlength(survey_data$wait_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 707\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=survey_data, mapping= aes(x=wait_time)) + geom_histogram(bins=50, color=\"orange\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}