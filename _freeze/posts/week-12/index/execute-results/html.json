{
  "hash": "228a14a016c61e0c905957795fac97df",
  "result": {
    "markdown": "---\ntitle: \"Week 12: Customizations\"\nauthor: \"Gabi Yepez\"\ndate: \"2023-05-10\"\ncategories: [Customizations]\nimage: \"galaxy-brain-meme.jpg\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)   # data wrangling functions\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggthemes)    # for themes\nlibrary(patchwork)   # for combining plots\nlibrary(plotly)      # for interactive plots\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'plotly' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n:::\n\n```{.r .cell-code}\n# devtools::install_github(\"hrbrmstr/waffle\")\nlibrary(waffle)      # for waffle plots\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'waffle' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggbump)      # for bump plots\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggbump' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggwordcloud) # for word clouds\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggwordcloud' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidytext)    # for manipulating text for word clouds\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidytext' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(sf)          # for mapping geoms\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'sf' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(rnaturalearth) # for map data\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnaturalearth' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(rnaturalearthdata) # extra mapping data\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnaturalearthdata' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rnaturalearthdata'\n\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n```\n:::\n\n```{.r .cell-code}\nlibrary(gganimate)   # for animated plots\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gganimate' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\ntheme_set(theme_light())\n```\n:::\n\n\n### Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# update column specification\nct <- cols(issue_category = col_factor(levels = c(\"tech\", \"returns\", \"sales\", \"other\")))\n\n# load data\nsurvey_data <- read_csv(file = \"data/survey_data.csv\",\n                        col_types = ct)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# create bar plot\nbar <- ggplot(data = survey_data, \n              mapping = aes(x = issue_category,\n                            fill = issue_category)) +\n  geom_bar(show.legend = FALSE) +\n  labs(x = \"Issue Category\", \n       y = \"Count\",\n       title = \"Calls by Issue Category\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#create scatterplot\npoint <- ggplot(data = survey_data, \n                mapping = aes(x = wait_time, \n                              y = call_time,\n                              color = issue_category)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = lm, formula = y~x) +\n  labs(x = \"Wait Time\",\n       y = \"Call Time\",\n       color = \"Issue Category\",\n       title = \"Wait Time by Call Time\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbar + point\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Annotations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbar +\n  # add left-justified text to the second bar\n  annotate(geom = \"text\",\n           label = \"Our goal is to\\nreduce this\\ncategory\",\n           x = 1.65, y = 150,\n           hjust = 0, vjust = 1, \n           color = \"white\", fontface = \"bold\",\n           angle = 45) +\n  # add a centred label to the third bar\n  annotate(geom = \"label\",\n           label = \"Our goal is\\nto increase this\\ncategory\",\n           x = 3, y = 75,\n           hjust = 0.5, vjust = 1, \n           color = \" darkturquoise\", fontface = \"bold\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npoint +\n  # add a rectangle surrounding long call times\n  annotate(geom = \"rect\",\n           xmin = 100, xmax = 275,\n           ymin = 140, ymax = 180,\n           fill = \"transparent\", color = \"red\") +\n  # add a text label\n  annotate(\"text\",\n           x = 260, y = 120,\n           label = \"outliers\") +\n  # add an line with an arrow from the text to the box\n  annotate(geom = \"segment\", \n           x = 240, y = 120, \n           xend = 200, yend = 135,\n           arrow = arrow(length = unit(0.5, \"lines\"))) +\n  # add a curved line with an arrow \n  # from the text to a wait time outlier\n  annotate(geom = \"curve\", \n          x = 280, y = 120, \n          xend = 320, yend = 45,\n          curvature = -0.5,\n          arrow = arrow(length = unit(0.5, \"lines\")))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_data <- read_csv(file = \"data/survey_data.csv\",\n                        show_col_types = FALSE)\n\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_freqpoly(boundary = 0, binwidth = 15, \n                color = \"black\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}