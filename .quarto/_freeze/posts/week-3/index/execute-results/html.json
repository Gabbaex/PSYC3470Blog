{
  "hash": "c11fb89af3606e87a4574ec91f59c7af",
  "result": {
    "markdown": "---\ntitle: \"Week 3 qmd skills\"\nauthor: \"Gabi Yepez\"\ndate: \"2023-02-15\"\ncategories: [assignment3, suspicious, experiment]\nformat:\n  html: \n    toc: true\n    toc-depth: 2\n    toc-title: Contents\nexecute: \n  eval: true \n---\n\n\n### 1\n\n1.  Be able to make a new .qmd document\n\nyes. - green plus icons or from file menu.\n\n### 2\n\n2.  Be able to render a .qmd document\n\nyes. - through render button.\n\n### 3\n\n3.  Explain the difference between the source editor view and visual editor view in Rstudio.\n\nsource view is plain text characters, visual view is rendered form of plain text that's interpreted to a formatted markdown.\n\n### 4\n\n4.  Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\n#### This is a header {.unnumbered .unlisted}\n\n-   **test text incoming:**\n    -   **regular test of a text** , *regular test of a fancy test*\n    -   quick maths: 45^0^ 65^38^ 12^500000^\n        -   ~~haha jk~~ `why is this purple`\n\n### 5\n\n5.  Be aware of resources to help you learn more about markdown options.\n\n`![Caption](image.png)`\n\n$insert math equation here$ $x=1$\n\n`grey square maker`\n\n<https://www.google.com>\n\n### 6\n\n6.  Be able to insert an R code chunk, and show the output in the rendered document.\n\n-macro for quick insert Running R code chunks in a qmd pressing play copy/paste into console highlight then command-enter (mac) precedence issues (first to last)\n\n`alt + ctrl + i , shortcut to make R space block thingy`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"hello \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhello \n```\n:::\n\n```{.r .cell-code}\ncat(\"pressing play runs the chunk into the console\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npressing play runs the chunk into the console\n```\n:::\n\n```{.r .cell-code}\n2+2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n1:10\n1:5\n1:20\n```\n:::\n\n\ncan highlight portion of code in R chunk, type ctrl + enter to run selected part(s)\n\nsyntax for R chunk #\\| and press tab to see options for parameters\n\n### 7\n\n7.  Be aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mtcars$mpg)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=75%}\n:::\n\n```{.r .cell-code}\n\"b\" + 5\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"b\" + 5: non-numeric argument to binary operator\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n\n### 8\n\n8.  Be able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\n    yes, using execute in top-level yml - chunk options \\> global options\n\n### 9\n\n9.  Write inline r code.\n\n    8\n\n    My weekly MTA fare is 11 dollars.\n\n### 10\n\n10. Explain how the rendering environment is different from the Rstudio environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 50\nb <- 100\n\nc <- a+b\n```\n:::\n\n\nrestarting R restarts the Rstudio environment as new, the rendering environment is its own separate R\n\n### 11\n\n11. Be aware of more advanced quarto options for html documents, and try some of the options. :(\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}