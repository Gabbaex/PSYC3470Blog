{
  "hash": "0d86d28e516c4ae680bfd50502e877af",
  "result": {
    "markdown": "---\ntitle: \"Week 11 data wrangling\"\nauthor: \"Gabi Yepez\"\ndate: \"2023-04-24\"\ncategories: [data wrangling]\nimage: \"galaxy-brain-meme.jpg\"\n---\n\n\n### \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2\n──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ stringr 1.5.0\n✔ tidyr   1.3.0     ✔ forcats 1.0.0\n✔ readr   2.1.3     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbudget <- read_csv(\"data/budget.csv\", show_col_types = FALSE)\n\nview(budget)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# select single column by name, uses pipe operator\nproduct_dat <- budget %>% select(product)\n\n# select single column by number\nproduct_dat <- budget %>% select(2) \n\nproduct_dat <- budget %>% select(2,3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# to print column 2 n 3 - not assigned so prints by default\nbudget %>% select(2,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 2\n  product sales_2019\n  <chr>        <dbl>\n1 widgets       2129\n2 gadgets        723\n3 widgets       1123\n4 gadgets       2022\n5 widgets       -728\n6 gadgets       -423\n7 widgets        633\n8 gadgets       1204\n```\n:::\n\n```{.r .cell-code}\n#can also type name of variable to print\nproduct_dat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 2\n  product sales_2019\n  <chr>        <dbl>\n1 widgets       2129\n2 gadgets        723\n3 widgets       1123\n4 gadgets       2022\n5 widgets       -728\n6 gadgets       -423\n7 widgets        633\n8 gadgets       1204\n```\n:::\n\n```{.r .cell-code}\n#will look better rendered w html\nknitr::kable(product_dat)\n```\n\n::: {.cell-output-display}\n|product | sales_2019|\n|:-------|----------:|\n|widgets |       2129|\n|gadgets |        723|\n|widgets |       1123|\n|gadgets |       2022|\n|widgets |       -728|\n|gadgets |       -423|\n|widgets |        633|\n|gadgets |       1204|\n:::\n:::\n\n\n### colon notation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# select columns individually\nsales2019 <- budget %>% select(region, product, sales_2019)\n\n# select columns with colon\nsales2019 <- budget %>% select(region:sales_2019)\n\n#select columns w colon\nyears <- budget %>% select(3:7)\nyears <- budget %>% select(sales_2019:satisfaction_2020)\nyears\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 6\n  sales_2019 sales_2020 expenses_2019 expenses_2020 satisfaction_2019 satisfac…¹\n       <dbl>      <dbl>         <dbl>         <dbl> <chr>             <chr>     \n1       2129       -517           822          -897 high              very high \n2        723         77          1037          1115 very high         very high \n3       1123      -1450          1004           672 high              neutral   \n4       2022       -945          -610           200 low               low       \n5       -728        -51          -801          -342 very low          very low  \n6       -423       -354            94          2036 neutral           high      \n7        633        790           783          -315 neutral           neutral   \n8       1204        426           433          -136 low               low       \n# … with abbreviated variable name ¹​satisfaction_2020\n```\n:::\n\n```{.r .cell-code}\n# excluding colums using minus\n\n# de-select individual columns\nsales <- budget %>% select(-expenses_2019, -expenses_2020)\n\n# de-select a range of columns\nsales <- budget %>% select(-(expenses_2019:expenses_2020))\nsales\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 6\n  region product sales_2019 sales_2020 satisfaction_2019 satisfaction_2020\n  <chr>  <chr>        <dbl>      <dbl> <chr>             <chr>            \n1 North  widgets       2129       -517 high              very high        \n2 North  gadgets        723         77 very high         very high        \n3 South  widgets       1123      -1450 high              neutral          \n4 South  gadgets       2022       -945 low               low              \n5 East   widgets       -728        -51 very low          very low         \n6 East   gadgets       -423       -354 neutral           high             \n7 West   widgets        633        790 neutral           neutral          \n8 West   gadgets       1204        426 low               low              \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# select all rows where region equals North\nbudget %>% filter(region == \"North\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 North  widgets       2129       -517           822        -897 high    very h…\n2 North  gadgets        723         77          1037        1115 very h… very h…\n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n\n```{.r .cell-code}\n# select all rows where expenses_2020 were exactly equal to 200\nbudget %>% filter(expenses_2020 == 200)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 South  gadgets       2022       -945          -610         200 low     low    \n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n\n```{.r .cell-code}\n# select all rows where sales_2019 was more than 100\nbudget %>% filter(sales_2019 > 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 North  widgets       2129       -517           822        -897 high    very h…\n2 North  gadgets        723         77          1037        1115 very h… very h…\n3 South  widgets       1123      -1450          1004         672 high    neutral\n4 South  gadgets       2022       -945          -610         200 low     low    \n5 West   widgets        633        790           783        -315 neutral neutral\n6 West   gadgets       1204        426           433        -136 low     low    \n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n\n```{.r .cell-code}\n# everything but the North\nbudget %>% filter(region != \"North\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 South  widgets       1123      -1450          1004         672 high    neutral\n2 South  gadgets       2022       -945          -610         200 low     low    \n3 East   widgets       -728        -51          -801        -342 very l… very l…\n4 East   gadgets       -423       -354            94        2036 neutral high   \n5 West   widgets        633        790           783        -315 neutral neutral\n6 West   gadgets       1204        426           433        -136 low     low    \n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# regions and products with profit in both 2019 and 2020\nprofit_both <- budget %>% \n  filter(\n    sales_2019 > expenses_2019,\n    sales_2020 > expenses_2020\n  )\n\n# the same as above, using & instead of a comma\nprofit_both <- budget %>% \n  filter(\n    sales_2019 > expenses_2019 &\n    sales_2020 > expenses_2020\n  )\n\n# regions and products with profit in 2019 or 2020\nprofit_either <- budget %>% \n  filter(\n    sales_2019 > expenses_2019 |\n    sales_2020 > expenses_2020\n  )\n\n# 2020 profit greater than 1000\nprofit_1000 <- budget %>%\n  filter(sales_2020 - expenses_2020 > 1000)\n```\n:::\n\n\n### in\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# retain any rows where region is north or south, and where product equals widget\nbudget %>%\n  filter(region %in% c(\"North\", \"South\"),\n         product == \"widgets\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 North  widgets       2129       -517           822        -897 high    very h…\n2 South  widgets       1123      -1450          1004         672 high    neutral\n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n\n```{.r .cell-code}\n# retain any rows where the region is not east or west, and where the product does not equal gadgets\nbudget %>%\n  filter(!region %in% c(\"East\", \"West\"),\n         product != \"gadgets\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 North  widgets       2129       -517           822        -897 high    very h…\n2 South  widgets       1123      -1450          1004         672 high    neutral\n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#more in examples\na <- c(1:5)\n\n#looks through and outcomes true or false\n6 %in% a\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\n1 %in% a\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n#to check if not in\nif(1 %in% a == TRUE){\n  \"yes\"\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"yes\"\n```\n:::\n\n```{.r .cell-code}\nif(6 %in% a == FALSE){\n  \"yes\"\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"yes\"\n```\n:::\n\n```{.r .cell-code}\n#default variable 'letters' prints out a-z\nletters\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n```\n:::\n\n```{.r .cell-code}\nLETTERS\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\"\n[20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"\n```\n:::\n\n```{.r .cell-code}\nwhich(letters %in% \"g\", arr.ind = TRUE) #where is index of letter\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7\n```\n:::\n:::\n\n\n### arrange\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# arranging the table \n# first by product in alphabetical order\n# then by \"region\" in reverse alphabetical order\nbudget %>%\n  arrange(product, desc(region))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 8\n  region product sales_2019 sales_2020 expenses_2019 expenses_…¹ satis…² satis…³\n  <chr>  <chr>        <dbl>      <dbl>         <dbl>       <dbl> <chr>   <chr>  \n1 West   gadgets       1204        426           433        -136 low     low    \n2 South  gadgets       2022       -945          -610         200 low     low    \n3 North  gadgets        723         77          1037        1115 very h… very h…\n4 East   gadgets       -423       -354            94        2036 neutral high   \n5 West   widgets        633        790           783        -315 neutral neutral\n6 South  widgets       1123      -1450          1004         672 high    neutral\n7 North  widgets       2129       -517           822        -897 high    very h…\n8 East   widgets       -728        -51          -801        -342 very l… very l…\n# … with abbreviated variable names ¹​expenses_2020, ²​satisfaction_2019,\n#   ³​satisfaction_2020\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}