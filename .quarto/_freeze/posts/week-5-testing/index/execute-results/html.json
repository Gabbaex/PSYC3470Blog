{
  "hash": "9c564d78638555186604cb2699760811",
  "result": {
    "markdown": "---\ntitle: \"Week-5-Testing\"\nauthor: \"Gabi Yepez\"\ndate: \"2023-02-27\"\ncategories: [Data Import]\nimage: \"galaxy-brain-meme.jpg\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)     # includes readr & tibble\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\nlibrary(googlesheets4) # for Google Sheets\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# list datasets built in to base R\ndata()\n\n# lists datasets in a specific package\ndata(package = \"tidyr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(cars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 50\nColumns: 2\n$ speed <dbl> 4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13…\n$ dist  <dbl> 2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34…\n```\n:::\n\n```{.r .cell-code}\n# call print explicitly\nprint(table1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n:::\n\n```{.r .cell-code}\n# more common method of just calling object name\ntable1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n:::\n\n```{.r .cell-code}\ntibble::glimpse(table1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 6\nColumns: 4\n$ country    <chr> \"Afghanistan\", \"Afghanistan\", \"Brazil\", \"Brazil\", \"China\", …\n$ year       <dbl> 1999, 2000, 1999, 2000, 1999, 2000\n$ cases      <dbl> 745, 2666, 37737, 80488, 212258, 213766\n$ population <dbl> 19987071, 20595360, 172006362, 174504898, 1272915272, 12804…\n```\n:::\n\n```{.r .cell-code}\nsummary(table1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   country               year          cases          population       \n Length:6           Min.   :1999   Min.   :   745   Min.   :1.999e+07  \n Class :character   1st Qu.:1999   1st Qu.: 11434   1st Qu.:5.845e+07  \n Mode  :character   Median :2000   Median : 59113   Median :1.733e+08  \n                    Mean   :2000   Mean   : 91277   Mean   :4.901e+08  \n                    3rd Qu.:2000   3rd Qu.:179316   3rd Qu.:9.983e+08  \n                    Max.   :2000   Max.   :213766   Max.   :1.280e+09  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(cars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(summarytools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'summarytools'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tibble':\n\n    view\n```\n:::\n\n```{.r .cell-code}\nview(dfSummary(starwars))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSwitching method to 'browser'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nOutput file written: C:\\Users\\gabiy\\AppData\\Local\\Temp\\RtmpUtERff\\file66982cc7f96.html\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rio)\n\ndemo_tsv <- import(file = \"data/demo.tsv\")\ndemo_csv  <- import(\"data/demo.csv\")  # comma-separated values\ndemo_xls  <- import(\"data/demo.xlsx\") # Excel format\ndemo_sav  <- import(\"data/demo.sav\")  # SPSS format\n\ndemo_tsv$factor <- as.factor(demo_tsv$factor)\n\nglimpse(demo_tsv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 6\nColumns: 6\n$ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    <fct> high, low, med, high, low, med\n$ integer   <int> 1, 2, 3, 4, 5, 6\n$ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      <IDate> 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n```\n:::\n\n```{.r .cell-code}\ndemo_tsv$character\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\"\n```\n:::\n\n```{.r .cell-code}\ndemo_tsv$factor\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] high low  med  high low  med \nLevels: high low med\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngs4_deauth() # skip authorisation for public data\n\ndemo_gs4  <- googlesheets4::read_sheet(\n  ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Reading from \"demo\".\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Range 'Sheet1'.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navatar <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE,\n  numbers = c(1,2,3),\n  more_numbers = 1:3,\n)\n\n# print it\navatar\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  name   bends friendly numbers more_numbers\n  <chr>  <chr> <lgl>      <dbl>        <int>\n1 Katara water TRUE           1            1\n2 Toph   earth TRUE           2            2\n3 Sokka  <NA>  TRUE           3            3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navatar_by_row <- tribble(\n  ~name,    ~bends,  ~friendly, ~numbers,\n  \"Katara\", \"water\", TRUE, 1L,\n  \"Toph\",   \"earth\", TRUE, 2L,\n  \"Sokka\",  NA,      TRUE, 3L\n)\n\navatar_by_row\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  name   bends friendly numbers\n  <chr>  <chr> <lgl>      <int>\n1 Katara water TRUE           1\n2 Toph   earth TRUE           2\n3 Sokka  <NA>  TRUE           3\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}