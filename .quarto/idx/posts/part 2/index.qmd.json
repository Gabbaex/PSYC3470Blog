{"title":"Midterm: Part II","markdown":{"yaml":{"title":"Midterm: Part II","author":"Gabi Yepez","date":"2023-03-28","categories":["Midterm"],"image":"midterm.jpg"},"headingText":"M2: *Solving Problems*","containsRefs":false,"markdown":"\n\n\n## 1\n\n> Do simple math with numbers, addition, subtraction, multiplication, division\n\n```{r}\n1+1\n3-4\n4*4\n10/2\n```\n\n## 2\n\n> Put numbers into variables, do simple math on the variables\n\n```{r}\na<-1\nb<-2\nc<-3\n\n(a+b) / c\n```\n\n## 3\n\n> Write code that will place the numbers 1 to 100 separately into a variable using for loop. Then, again using the seq function.\n\n```{r}\nsolution <- 1:100\n\na <- c()\n\nfor(i in 1:100) {\n  a[i] <- i\n}\na\n\ni <- 0\na <- c()\nwhile(i <= 100) {\n  i <- i+1\n  a[i] <- i\n}\n\na\n```\n\n## 5\n\n> Write a function to find the sum of all integers between any two values\n\n```{r}\nsum(50:100) # easy way but have to write function to find it\n\n# function syntax\nsum_sequence <- function(min,max){\n  return(sum(min:max))\n}\n\nsum_sequence(min=5, max=100)\n\nsum_sequence_loop <- function(min,max){\n  a <- 0\n   for(i in min:max){\n    a <- a+i\n   }\n  return(a)\n}\n\n\n```\n\n## 7\n\n> List all of the prime numbers from 1 to 1000\n\n```{r}\na <- 1:1000\n\nisprime <- function(x) {\n  generate_sequence <- 1:x\n  counter <- 0\n  for(i in generate_sequence){\n    if(x%%i == 0){\n      counter <- counter+1\n    }\n  }\n  \n  if(counter <= 2) {\n    return(TRUE)\n  } else{\n    return(FALSE)\n  }\n}\n\nfor(i in a){\n  if(isprime(i) == TRUE) print(i)\n}\n```\n\n## 9\n\n> Generate 100 random numbers within a specific range\n\n```{r}\nrunif(100,0,100)\n\n```\n\n## 10\n\n```{r}\n## mean\n\nmean_B <- function(x){\n  temp_sum <- 0\n  temp_length <- 0\n  for(i in x){\n  temp_sum <- temp_sum+i\n  temp_length <- temp_length+1\n  }\n  \n  return(temp_sum/temp_length)\n}\n```\n\n```{r}\n## mode \n\ne <- c(1,1,1,1,1,2,3,4,5)\n\nmy_unique <- function(x){\n  unique_number <- c()\n  counter <- 0\n  for(i in x){\n    \n    test_unique <- i == unique_number\n    if(sum(test_unique) > 0) {\n      counter <- counter+1\n      unique_number[counter] <- unique_number\n    }\n    \n    print(sum(test_unique))\n    \n  }\n  \n  return(unique_number)\n}\n```\n\n## Harder Problems\n\n##### (*thank you chatgbt*)\n\n### 1 Fizzbuzz\n\n```{r}\n# Define the range of numbers\nnumbers <- 1:100\n\n# Loop through each number in the range\nfor (i in numbers) {\n  \n  # If the number is divisible by 3 and 5, print \"FizzBuzz\"\n  if (i %% 3 == 0 & i %% 5 == 0) {\n    print(\"FizzBuzz\")\n    \n  # If the number is divisible by 3, print \"Fizz\"\n  } else if (i %% 3 == 0) {\n    print(\"Fizz\")\n    \n  # If the number is divisible by 5, print \"Buzz\"\n  } else if (i %% 5 == 0) {\n    print(\"Buzz\")\n    \n  # Otherwise, print the number itself\n  } else {\n    print(i)\n  }\n}\n\n```\n\n### 2 Dice-rolling simulations\n\n```{r}\n# set the number of dice rolls\nnum_rolls <- 100\n\n# simulate rolling a six-sided dice\ndice_rolls <- sample(1:6, num_rolls, replace = TRUE)\n\n# print the results\nprint(dice_rolls)\n\n```\n\n### 3 Snakes and Ladders\n\n```{r}\n# Set up the game board\ngame_board <- data.frame(\n  start = c(1, 4, 9, 16, 21, 28, 36, 44, 52, 67, 71, 80, 87),\n  end = c(38, 14, 31, 6, 42, 84, 44, 26, 72, 86, 91, 100, 24)\n)\n\n# Define a function to simulate a single turn\nsimulate_turn <- function(current_position) {\n  # Roll the dice\n  dice_roll <- sample(1:6, 1)\n\n  # Move the player\n  new_position <- current_position + dice_roll\n\n  # Check for a ladder or snake\n  ladder_or_snake <- which(game_board$start == new_position)\n  if (length(ladder_or_snake) > 0) {\n    new_position <- game_board$end[ladder_or_snake]\n    message(paste0(\"Landed on a ladder! Moving to position \", new_position, \".\"))\n  } else {\n    ladder_or_snake <- which(game_board$end == new_position)\n    if (length(ladder_or_snake) > 0) {\n      new_position <- game_board$start[ladder_or_snake]\n      message(paste0(\"Landed on a snake! Moving to position \", new_position, \".\"))\n    }\n  }\n\n  # Make sure the player didn't go past the end of the board\n  if (new_position > 100) {\n    new_position <- current_position\n  }\n\n  # Return the new position\n  return(new_position)\n}\n\n# Define a function to simulate a full game\nsimulate_game <- function() {\n  # Initialize the game\n  position <- 0\n  turns <- 0\n\n  # Loop until the player reaches the end of the board\n  while (position < 100) {\n    # Simulate a turn\n    position <- simulate_turn(position)\n    turns <- turns + 1\n\n    # Print the current position\n    message(paste0(\"Current position: \", position, \".\"))\n  }\n\n  # Print the number of turns it took to win\n  message(paste0(\"You won in \", turns, \" turns!\"))\n}\n\n# Run the game\nsimulate_game()\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","editor":"visual","theme":"cosmo","title-block-banner":true,"title":"Midterm: Part II","author":"Gabi Yepez","date":"2023-03-28","categories":["Midterm"],"image":"midterm.jpg"},"extensions":{"book":{"multiFile":true}}}}}