{"title":"Week 10: Data Tidying","markdown":{"yaml":{"title":"Week 10: Data Tidying","author":"Gabi Yepez","date":"2023-04-17","categories":["Data Tidying"],"image":"data_tidy.webp"},"headingText":"Data Tidying","containsRefs":false,"markdown":"\n\n\n```{r}\nlibrary(tidyverse) # for data wrangling\n```\n\n```{r}\nuntidy_data <- read_csv(\"data/untidy_data.csv\", show_col_types = FALSE) #reads data and loads into environment via assign\n```\n\n```{r}\ntidy_data <- read_csv(\"data/tidy_data.csv\", show_col_types = FALSE) #reads data and loads into environment via assign\n```\n\n```{r}\n#way to show data in table\nknitr::kable(tidy_data)\n\nknitr::kable(untidy_data)\n```\n\n```{r}\ntidy_data %>%\n  group_by(customer_id) %>%\n  summarise(\n    total_items = sum(items),\n    total_price = sum(totalprice)\n  )\n```\n\n```{r}\n# select just the customer ID and 3 total price columns\nwide_totalprice <- select( #select allows to pick certain columns\n  .data = untidy_data,\n  customer_id, \n  `2018` = totalprice_2018,\n  `2019` = totalprice_2019,\n  `2020` = totalprice_2020\n)\n\nlong_totalprice <- pivot_longer(\n  data = wide_totalprice,\n  cols = `2018`:`2020`,\n  names_to = \"year\",\n  values_to = \"totalprice\")\n\nuntidy_data[,c(1,5:7)] #[] specifies which col/row to show\n```\n\n```{r}\nggplot(long_totalprice, aes(x = totalprice, fill = year)) +\n  geom_histogram(binwidth = 10, color = \"black\")\n```\n\n### pivot wider\n\n```{r}\n#reshapes the data wider via customer id\nwide_by_customer <- pivot_wider( \n  data = long_totalprice,\n  id_cols = year, # identifying column(s)\n  names_from = customer_id, # the new column names\n  names_prefix = \"C_\", # prefix for new column names\n  values_from = totalprice # the new column values\n)\n\n#reshapes the data wider via years\nwide_by_year <- pivot_wider( #\n  data = long_totalprice,\n  id_cols = customer_id, # identifying column(s)\n  names_from = year, # the new column names\n  values_from = totalprice # the new column values\n)\n```\n\n```{r}\n#reshapes data longer-wise\nlonger_data <- pivot_longer(\n  data = untidy_data, \n  cols = itemsprice_2018:totalprice_2020, # columns to make long \n  names_to = c(\"category\", \"year\"), # new column names for cols\n  names_sep = \"_\", # how to split cols into new columns\n  # names_pattern = \"(.*)_(.*)\", # alternative to names_sep\n  values_to = \"value\", # new column name for values\n  \n  # make sure new columns are the right data type\n  names_transform = list(year = as.integer),\n  values_transform = list(value = as.character) \n)\n\n#wider\nwider_data <- pivot_wider(\n  data = longer_data,\n  id_cols = c(customer_id, year),\n  names_from = category,\n  values_from = value\n)\n\n#splits the columns that had combined data, in to separate ones via indicators\nsplit_data <- separate(\n  data = wider_data, \n  col = itemsprice, # the column to split\n  into = c(\"items\", \"price_per_item\"), # the new columns to create\n  sep = \" \", # split col by space\n  remove = TRUE, # whether to remove to old col\n  convert = TRUE # whether to fix the data type of the new columns\n)\n\n#mutates data to get rid of awkward parenthesis in values\nmutated_data <- mutate(\n  .data = split_data,\n  price_per_item = stringr::str_replace_all(\n    string = price_per_item, \n    pattern = \"[()]\", \n    replacement = \"\"\n  )\n)\n\n# check the data types\nglimpse(mutated_data)\n```\n\n```{r}\n\ntidy_data <- type_convert(\n  df = mutated_data,\n  trim_ws = TRUE # removes spaces before and after values\n)\n\n# check the data types\nglimpse(tidy_data)\n```\n\n```{r}\n\nuntidy_data <- read_csv(\"data/untidy_data.csv\", \n                        show_col_types = FALSE)\n\nlonger_data <- pivot_longer(\n  data = untidy_data,\n  cols = itemsprice_2018:totalprice_2020,\n  names_to = c(\"category\", \"year\"),\n  names_sep = \"_\", \n  values_to = \"value\", \n  names_transform = list(year = as.integer),\n  values_transform = list(value = as.character) \n) \n\nwider_data <- pivot_wider(\n  data = longer_data,\n  id_cols = c(customer_id, year),\n  names_from = category,\n  values_from = value\n)\n\nsplit_data <- separate(\n  data = wider_data,\n  col = itemsprice,\n  into = c(\"items\", \"price_per_item\"),\n  sep = \" \", \n  remove = TRUE, \n  convert = TRUE\n) \n\nmutated_data <- mutate(\n  .data = split_data,\n  price_per_item = stringr::str_replace_all(\n    string = price_per_item, \n    pattern = \"[()]\", \n    replacement = \"\"\n  )\n) \n\ntidy_data <- type_convert(\n  df = mutated_data,\n  trim_ws = TRUE\n)\n```\n\n```{r}\ntidy_data <- read_csv(file = \"data/untidy_data.csv\",\n                      show_col_types = FALSE) %>%\n  pivot_longer(\n    cols = itemsprice_2018:totalprice_2020,\n    names_to = c(\"category\", \"year\"),\n    names_sep = \"_\", \n    values_to = \"value\", \n    names_transform = list(year = as.integer),\n    values_transform = list(value = as.character) \n  ) %>%\n  pivot_wider(\n    id_cols = c(customer_id, year),\n    names_from = category,\n    values_from = value\n  ) %>%\n  separate(\n    col = itemsprice,\n    into = c(\"items\", \"price_per_item\"),\n    sep = \" \", \n    remove = TRUE, \n    convert = TRUE\n  ) %>%\n  mutate(\n    price_per_item = stringr::str_replace_all(\n      string = price_per_item, \n      pattern = \"[()]\", \n      replacement = \"\"\n    )\n  ) %>%\n  type_convert(\n    trim_ws = TRUE\n  )\n\ntidy_data #displays final tidy data\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","editor":"visual","theme":"cosmo","title-block-banner":true,"title":"Week 10: Data Tidying","author":"Gabi Yepez","date":"2023-04-17","categories":["Data Tidying"],"image":"data_tidy.webp"},"extensions":{"book":{"multiFile":true}}}}}