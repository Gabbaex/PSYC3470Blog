#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"))
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "grey"))
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "black"))
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"))
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
library(tidyverse) #load libraries
review_data <- rio::import("data/review_data.csv") #load the data
glimpse(review_data)
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of verified users
verified_reviews <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
View(verified_reviews)
#get number of verified users
verified_reviews <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
verified_reviews
library(tidyverse) #load libraries
review_data <- rio::import("data/review_data.csv") #load the data
glimpse(review_data)
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of verified users
verified_reviews <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
verified_reviews
#get number of verified users
verified_reviews <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
verified_reviews
#get number of verified users
verified_reviews <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
knitr::kable(verified_reviews)
#get number of reviews per year
review_by_year <- review_data %>%
group_by(year, verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_year, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts, mapping = aes(x=year, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", fill = "counts", color = "verified")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", fill = verified)+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", fill = "blue")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", fill = "TRUE")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", fill = TRUE)+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified))+
geom_bar(stat = "identity", color = "grey")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified, fill = verified))+
geom_bar(stat = "identity", color = "grey")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per year
year_by_verified_counts <- review_data %>%
group_by(year,verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = year_by_verified_counts,
mapping = aes(x=year, y=counts, group = verified, fill = verified))+
geom_bar(stat = "identity")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "By purchase status")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Number of Reviews per year", subtitle = "1999 to 2018")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous(breaks = 1999:2018)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_x_continuous()+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_y_continuous(breaks = 0:300000)+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_y_continuous(limits = 0,300000)+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_y_continuous(limits = NA)+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_y_continuous(breaks = NULL)+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_y_continuous()+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
scale_y_continuous(options(scipen))+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
options(scipen)+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_rating <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
options=scipen+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_verified_counts <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_verified_counts, mapping = aes(x=rating, y=counts))+
geom_bar(stat = "identity", fill = "white", color = "black")+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_verified_counts <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_verified_counts, mapping = aes(x=rating, y=counts, fill=rating))+
geom_bar(stat = "identity", fill = "white", color = "black")+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_verified_counts <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_verified_counts, mapping = aes(x=rating, y=counts, fill = rating))+
geom_bar(stat = "identity")+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_verified_counts <- review_data %>%
group_by(rating) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_verified_counts, mapping = aes(x=rating, y=counts, fill = verified))+
geom_bar(stat = "identity")+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_verified_counts <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_verified_counts, mapping = aes(x=rating, y=counts, fill = verified))+
geom_bar(stat = "identity")+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
#get number of reviews per rating
review_by_verified_counts <- review_data %>%
group_by(verified) %>%
summarize(counts = n())
#plot, aes sets up mapping X.Y,
ggplot(data = review_by_verified_counts, mapping = aes(x=rating, y=counts, group = verified, fill = verified))+
geom_bar(stat = "identity", position = "dodge")+
xlab("")+ylab("")+
ggtitle(label = "Review ratings", subtitle = "Number of Reviews for each rating")+
theme(panel.grid.major=element_line(color = "darkgrey"), panel.grid.minor=element_line(color = "lightgrey"), panel.background = element_rect(fill = "lightgrey"))
library(tidyverse)
library(tidyverse)
customers <- tibble(
id = 1:5,
city = c("Port Ellen", "Dufftown", NA, "Aberlour", "Tobermory"),
postcode = c("PA42 7DU", "AB55 4DH", NA, "AB38 7RY", "PA75 6NR")
)
orders <- tibble(
id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),
items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)
)
orders_B <- tibble(
id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),
items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)
)
# adds new column
orders_B %>%
mutate(satisfaction = NA)
# adds multiple new column
orders_B %>%
mutate(satisfaction = NA,
numbers = 1:9)
# have to assign back to tibble to update
orders_B <- orders_B %>%
mutate(satisfaction = NA,
numbers = 1:9)
orders_B %>%
mutate(numbers_as_strings = as.character(numbers))
# math operation on columns
orders_B %>%
mutate(items_minus_id = items - id)
full_data <- full_join(customers, orders, by = "id")
full_data
# if row have number greater than 10, filters
full_data %>%
filter(items > 10) # column name w/ logical comparison
full_data %>%
filter(postcode == "AB38 7RY")
# filter uses & to show both post code with items greater
full_data %>%
filter(postcode == "AB38 7RY" & items > 21)
