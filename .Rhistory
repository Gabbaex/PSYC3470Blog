"b" + 5
a <- 50
b <- 100
c <- a+b
install.packages("rio")
library(tidyverse)     # includes readr & tibble
library(rio)           # for almost any data import/export
library(haven)         # for SPSS, Stata,and SAS files
library(readxl)        # for Excel files
library(googlesheets4) # for Google Sheets
library(rio)
install_formats(arrow())
install_formats(arrow)
install_formats(rio)
install_formats(feather)
view(cars)
data(package = "tidyr")
install_formats('arrow')
# list datasets built in to base R
data()
# lists datasets in a specific package
data(package = "tidyr")
?table
data("table1")
force(table1)
glimpse(cars)
view(table1)
glimpse(cars)
# call print explicitly
print(table1)
# more common method of just calling object name
table1
glimpse(cars)
# call print explicitly
print(table1)
# more common method of just calling object name
table1
tibble::glimpse(table1)
glimpse(cars)
# call print explicitly
print(table1)
# more common method of just calling object name
table1
tibble::glimpse(table1)
summary(table1)
view(cars)
summary(cars)
data("cars")
data("starwars")
force(cars)
force(starwars)
install.packages("summarytools")
view(dfSummary(starwars))
library(summarytools)
view(dfSummary(starwars))
library(rio
)
library(rio)
library(rio)
import(file = "data/demo.tsv")
view(demo_tsv)
library(rio)
demo_tsv <- import(file = "data/demo.tsv")
View(demo_tsv)
library(rio)
demo_tsv <- import(file = "data/demo.tsv")
demo_csv  <- import("data/demo.csv")  # comma-separated values
demo_xls  <- import("data/demo.xlsx") # Excel format
demo_sav  <- import("data/demo.sav")  # SPSS format
View(demo_sav)
View(demo_xls)
gs4_deauth() # skip authorisation for public data
demo_gs4  <- googlesheets4::read_sheet(
ss = "16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI"
)
view(Sheet1)
gs4_deauth() # skip authorisation for public data
demo_gs4  <- googlesheets4::read_sheet(
ss = "16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI"
)
gs4_get(ss ss = demo_gs4)
View(demo_gs4)
gs4_deauth() # skip authorisation for public data
demo_gs4  <- googlesheets4::read_sheet(
ss = "16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI"
)
gs4_get(ss ss = demo_gs4)
gs4_deauth() # skip authorisation for public data
demo_gs4  <- googlesheets4::read_sheet(
ss = "16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI"
)
gs4_get(ss = demo_gs4)
gs4_deauth() # skip authorisation for public data
demo_gs4  <- googlesheets4::read_sheet(
ss = "16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI"
)
gs4_get(ss = demo_gs4)
library(rio)
demo_tsv <- import(file = "data/demo.tsv")
demo_csv  <- import("data/demo.csv")  # comma-separated values
demo_xls  <- import("data/demo.xlsx") # Excel format
demo_sav  <- import("data/demo.sav")  # SPSS format
demo_tsv$factor <- as.factor(demo_tsv$factor)
library(rio)
demo_tsv <- import(file = "data/demo.tsv")
demo_csv  <- import("data/demo.csv")  # comma-separated values
demo_xls  <- import("data/demo.xlsx") # Excel format
demo_sav  <- import("data/demo.sav")  # SPSS format
demo_tsv$factor <- as.factor(demo_tsv$factor)
library(rio)
demo_tsv <- import(file = "data/demo.tsv")
demo_csv  <- import("data/demo.csv")  # comma-separated values
demo_xls  <- import("data/demo.xlsx") # Excel format
demo_sav  <- import("data/demo.sav")  # SPSS format
demo_tsv$factor <- as.factor(demo_tsv$factor)
glimpse(demo_tsv)
demo_tsv$character
demo_tsv$factor
avatar <- tibble(
name = c("Katara", "Toph", "Sokka"),
bends = c("water", "earth", NA),
friendly = TRUE
)
# print it
avatar
View(avatar)
avatar_by_row <- tribble(
~name,    ~bends,  ~friendly,
"Katara", "water", TRUE,
"Toph",   "earth", TRUE,
"Sokka",  NA,      TRUE
)
avatar_by_row <- tribble(
~name,    ~bends,  ~friendly,
"Katara", "water", TRUE,
"Toph",   "earth", TRUE,
"Sokka",  NA,      TRUE
)
View(avatar_by_row)
avatar_by_row <- tribble(
~name,    ~bends,  ~friendly, ~numbers,
"Katara", "water", TRUE, 1,
"Toph",   "earth", TRUE, 2,
"Sokka",  NA,      TRUE, 3
)
avatar_by_row <- tribble(
~name,    ~bends,  ~friendly, ~numbers,
"Katara", "water", TRUE, 1,
"Toph",   "earth", TRUE, 2,
"Sokka",  NA,      TRUE, 3
)
avatar_by_row
avatar_by_row <- tribble(
~name,    ~bends,  ~friendly, ~numbers,
"Katara", "water", TRUE, 1L,
"Toph",   "earth", TRUE, 2L,
"Sokka",  NA,      TRUE, 3L
)
avatar_by_row
avatar <- tibble(
name = c("Katara", "Toph", "Sokka"),
bends = c("water", "earth", NA),
friendly = TRUE
numbers = c(1,2,3),
avatar <- tibble(
name = c("Katara", "Toph", "Sokka"),
bends = c("water", "earth", NA),
friendly = TRUE,
numbers = c(1,2,3),
more_numbers = 1:3,
)
# print it
avatar
library(lubridate)
1 == 1
1 == 2
c(1, 2, 3) == c(2, 1, 3)
1 == c(2, 1, 3)
1 != 1
1 != 2
1 > 1
5 > 1
3 < 2
3 < 1
c(1, 2 ,3) > c(2, 1, 3)
1 >= 1
5 >= 1
3 <= 2
# is 16 divisible by 4 AND 8
16 %% 4 == 0 & 16 %% 8 == 0
16 %% 4 == 0 & 16 %% 3 == 0
16 %% 4 == 0 & 16 %% 8 == 0 & 16 %% 2 == 0
16 %% 4 == 0 | 16 %% 8 == 0
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
else {
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
else {
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
if (a == 1) {
print(a)
} else {
print("Hello world")
rbinom(1, 1:10, 10)
}
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
if (a == 2) {
print(a)
} else {
print("Hello world")
rbinom(1, 1:10, 10)
}
?rbinom
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
if (a == 2) {
print(a)
} else {
print("Hello world")
rbinom(1:10, 10)
}
a <- 1 # defines a to be a 1
if (a == 1) {
print(a) # this happens if a == 1
} else {
print("A is not 1") # this happens if a is not 1
}
if (a == 2) {
print(a)
} else {
print("Hello world")
}
# for loop
a <- c(1, 0, 1, 0, 0, 1)
for (i in a) {
if (i == 1) {
print("I'm a 1")
} else {
print("I'm not a 1")
}
}
# for loop
a <- c(1, 0, 1, 0, 0, 0, 1)
for (i in a) {
if (i == 1) {
print("I'm a 1")
} else {
print("I'm not a 1")
}
}
i <- 1
while (i < 6) {
print(i)
i <- i + 1 # adds one each step of loop
}
i <- 0
repeat {
i <- i + 1
print(i)
if (i == 5) {
break
}
}
i <- 2 print(i)
i <- 1 for (i in a) print(i)
library(tidyverse)
library(patchwork)
install.packages("patchwork")
library(tidyverse)
library(patchwork)
library(ggthemes)
library(lubridate)
a <- 2.5 # assigning character/variable
class(a)
type(a)
a <- 2.5 # assigning character/variable
class(a)
typeof(a)
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(a)
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(a) # find out it's not an integer
is.integer(aL)
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(2.5) # find out it's not an integer
is.integer(2.5L)
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(a) # find out it's not an integer (integers don't have decimals)
as.integer(2.5)
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(a) # find out it's not an integer (integers don't have decimals)
as.integer(a)
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(a) # find out it's not an integer (integers don't have decimals)
as.integer(a) # rounds (2.5) down to an integer (2)
integer(length = 5)
integer(length = 5)
numberic(length = 5)
integer(length = 5)
numeric(length = 5)
as.logical(a)
as.logical(0)
# logical/boolean
Typeof(TRUE)
# logical/boolean
typeof(TRUE)
# logical/boolean
typeof(TRUE)
class(TRUE)
is.logical(FALSE)
as.logical(1)
as.logical(0)
# logical/boolean
typeof(TRUE) # uppercase true makes logical variables
class(TRUE)
is.logical(FALSE) # same with uppercase false
as.logical(1)
as.logical(0)
# logical/boolean
typeof(TRUE) # uppercase true makes logical variables
class(TRUE)
is.logical(FALSE) # same with uppercase false
as.logical(1) # one will be seen as true
as.logical(0) # zero will be seen as false
logical(length = 3) # initializes logical vector three times
a <- 2.5 # assigning character/variable
class(a) # find out it's numeric
typeof(a) # find out it's a double
is.integer(a) # find out it's not an integer (integers don't have decimals)
as.integer(a) # rounds (2.5) down to an integer (2)
is.character(a)
library(tidyr)
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka"),
bends = c("water", "earth", NA),
friendly = TRUE,
numbers = c(1,2,3),
more_numbers = 1:3,
)
# print it
avatar
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE)
numbers = c(1,2,3),
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
numbers = c(1,2,3),
more_numbers = 1:3,
)
View(avatar)
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
numbers = c(1,2,3,4,5,6,7),
more_numbers = 1:7,
)
# print it
avatar
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
tribe/nation = c("water tribe","earth","water tribe","fire nation","fire nation","earth","water tribe"),
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
tribe-nation = c("water tribe","earth","water tribe","fire nation","fire nation","earth","water tribe"),
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
tribe,nation = c("water tribe","earth","water tribe","fire nation","fire nation","earth","water tribe"),
more_numbers = 1:7,
)
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
tribe = c("water tribe","earth","water tribe","fire nation","fire nation","earth","water tribe"),
more_numbers = 1:7,
)
# print it
avatar
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
more_numbers = 1:7,
)
# print it
avatar
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = 7,10,5,8,2,10,6
)
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = c(7,10,5,8,2,10,6)
)
# print it
avatar
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = c(7,10,5,8,2,10,6)
)
library(tidyr)
avatar <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = c(7,10,5,8,2,10,6)
)
avatar
library(tidyr)
atla <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = c(7,10,5,8,2,10,6)
)
atla # tibble name prints table
library(tidyr)
atla <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = c(7,10,5,8,2,10,6)
)
atla # tibble name prints table
tidyr::as_tibble(atla)
library(tidyr)
atla <- tibble(
name = c("Katara", "Toph", "Sokka", "Zuko", "Azula", "Suki", "Princess Yue"),
bends = c("water", "earth", NA, "fire", "fire", NA, "water"),
friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),
nation = c("water tribe","earth kingdom","water tribe","fire nation","fire nation","earth kingdom","water tribe"),
personal_rating = c(7,10,5,8,2,10,6) # out of ten
)
atla # tibble name prints table
tidyr::as_tibble(atla)
