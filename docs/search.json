[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PSYC3470Blog",
    "section": "",
    "text": "Week 8 data relations\n\n\n\n\n\n\n\nData Relations\n\n\n\n\n\n\n\n\n\n\n\nMar 29, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nMidterm part 2\n\n\n\n\n\n\n\nmidterm\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nVideo Game Review Report\n\n\n\n\n\n\n\ndata report\n\n\n\n\n\n\n\n\n\n\n\nMar 27, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nMidterm part 1\n\n\n\n\n\n\n\nmidterm\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nWeek 6 data summaries\n\n\n\n\n\n\n\nData Summaries\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nWeek 7 more ggplot2\n\n\n\n\n\n\n\nggplot\n\n\n\n\n\n\n\n\n\n\n\nMar 13, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nWeek 5 data import\n\n\n\n\n\n\n\nData Import\n\n\n\n\n\n\n\n\n\n\n\nMar 8, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 4 data vis\n\n\n\n\n\n\n\nassignment4\n\n\ndata types\n\n\ntidy data\n\n\nggplot2\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 5a Test\n\n\n\n\n\n\n\nloops\n\n\nlogic\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nWeek 3 qmd skills\n\n\n\n\n\n\n\nassignment3\n\n\nsuspicious\n\n\nexperiment\n\n\n\n\n\n\n\n\n\n\n\nFeb 15, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nNew Post Test\n\n\n\n\n\n\n\nnew\n\n\ntesting\n\n\nconfused\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\n  \n\n\n\n\nMy Tip Sheet for Week 2\n\n\n\n\n\n\n\ntips\n\n\n\n\n\n\n\n\n\n\n\nJan 25, 2023\n\n\nGabi Yepez\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/new-post-test/index.html",
    "href": "posts/new-post-test/index.html",
    "title": "New Post Test",
    "section": "",
    "text": "Testing - following the tutorial, but not sure how to remove the old image, trying to put a new one. I also kept the original code that was in the copied post, but changed some numbers - also not sure how that works.\nUpdate - I didn’t know how to put the image in and it wasn’t working for a while. However, something I did made it show up now woo!\n\n1000 - 7\n\n[1] 993"
  },
  {
    "objectID": "posts/part 2/index.html",
    "href": "posts/part 2/index.html",
    "title": "Midterm part 2",
    "section": "",
    "text": "Do simple math with numbers, addition, subtraction, multiplication, division\n\n\n1+1\n\n[1] 2\n\n3-4\n\n[1] -1\n\n4*4\n\n[1] 16\n\n10/2\n\n[1] 5\n\n\n\n\n\n\nPut numbers into variables, do simple math on the variables\n\n\na<-1\nb<-2\nc<-3\n\n(a+b) / c\n\n[1] 1\n\n\n\n\n\n\nWrite code that will place the numbers 1 to 100 separately into a variable using for loop. Then, again using the seq function.\n\n\nsolution <- 1:100\n\na <- c()\n\nfor(i in 1:100) {\n  a[i] <- i\n}\na\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\ni <- 0\na <- c()\nwhile(i <= 100) {\n  i <- i+1\n  a[i] <- i\n}\n\na\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100 101\n\n\n\n\n\n\nWrite a function to find the sum of all integers between any two values\n\n\nsum(50:100) # easy way but have to write function to find it\n\n[1] 3825\n\n# function syntax\nsum_sequence <- function(min,max){\n  return(sum(min:max))\n}\n\nsum_sequence(min=5, max=100)\n\n[1] 5040\n\nsum_sequence_loop <- function(min,max){\n  a <- 0\n   for(i in min:max){\n    a <- a+i\n   }\n  return(a)\n}\n\n\n\n\n\nList all of the prime numbers from 1 to 1000\n\n\na <- 1:1000\n\nisprime <- function(x) {\n  generate_sequence <- 1:x\n  counter <- 0\n  for(i in generate_sequence){\n    if(x%%i == 0){\n      counter <- counter+1\n    }\n  }\n  \n  if(counter <= 2) {\n    return(TRUE)\n  } else{\n    return(FALSE)\n  }\n}\n\nfor(i in a){\n  if(isprime(i) == TRUE) print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 5\n[1] 7\n[1] 11\n[1] 13\n[1] 17\n[1] 19\n[1] 23\n[1] 29\n[1] 31\n[1] 37\n[1] 41\n[1] 43\n[1] 47\n[1] 53\n[1] 59\n[1] 61\n[1] 67\n[1] 71\n[1] 73\n[1] 79\n[1] 83\n[1] 89\n[1] 97\n[1] 101\n[1] 103\n[1] 107\n[1] 109\n[1] 113\n[1] 127\n[1] 131\n[1] 137\n[1] 139\n[1] 149\n[1] 151\n[1] 157\n[1] 163\n[1] 167\n[1] 173\n[1] 179\n[1] 181\n[1] 191\n[1] 193\n[1] 197\n[1] 199\n[1] 211\n[1] 223\n[1] 227\n[1] 229\n[1] 233\n[1] 239\n[1] 241\n[1] 251\n[1] 257\n[1] 263\n[1] 269\n[1] 271\n[1] 277\n[1] 281\n[1] 283\n[1] 293\n[1] 307\n[1] 311\n[1] 313\n[1] 317\n[1] 331\n[1] 337\n[1] 347\n[1] 349\n[1] 353\n[1] 359\n[1] 367\n[1] 373\n[1] 379\n[1] 383\n[1] 389\n[1] 397\n[1] 401\n[1] 409\n[1] 419\n[1] 421\n[1] 431\n[1] 433\n[1] 439\n[1] 443\n[1] 449\n[1] 457\n[1] 461\n[1] 463\n[1] 467\n[1] 479\n[1] 487\n[1] 491\n[1] 499\n[1] 503\n[1] 509\n[1] 521\n[1] 523\n[1] 541\n[1] 547\n[1] 557\n[1] 563\n[1] 569\n[1] 571\n[1] 577\n[1] 587\n[1] 593\n[1] 599\n[1] 601\n[1] 607\n[1] 613\n[1] 617\n[1] 619\n[1] 631\n[1] 641\n[1] 643\n[1] 647\n[1] 653\n[1] 659\n[1] 661\n[1] 673\n[1] 677\n[1] 683\n[1] 691\n[1] 701\n[1] 709\n[1] 719\n[1] 727\n[1] 733\n[1] 739\n[1] 743\n[1] 751\n[1] 757\n[1] 761\n[1] 769\n[1] 773\n[1] 787\n[1] 797\n[1] 809\n[1] 811\n[1] 821\n[1] 823\n[1] 827\n[1] 829\n[1] 839\n[1] 853\n[1] 857\n[1] 859\n[1] 863\n[1] 877\n[1] 881\n[1] 883\n[1] 887\n[1] 907\n[1] 911\n[1] 919\n[1] 929\n[1] 937\n[1] 941\n[1] 947\n[1] 953\n[1] 967\n[1] 971\n[1] 977\n[1] 983\n[1] 991\n[1] 997\n\n\n\n\n\n\nGenerate 100 random numbers within a specific range\n\n\nrunif(100,0,100)\n\n  [1] 38.4460402 18.8109610 81.4764684  5.9846350 47.5998659  0.5002947\n  [7] 58.8629854 24.3857950  8.8112542 24.4202507 73.1221106 15.9664839\n [13] 51.2393622 88.5001608 49.3644173 82.2441335 86.5604895 30.6692167\n [19] 78.9017979 49.9996889 34.5128218 99.5474071 70.4703591 94.3992064\n [25] 52.7719136 16.3864006 93.0940565 69.1515604 86.7646683 17.0932303\n [31] 39.3824297 47.3377307 45.9282081 27.6066296 65.2907881 85.8274328\n [37] 13.7077113 85.2031423 10.3178386 19.3744259 42.0550555 15.7518199\n [43] 16.5074873 51.5529221 77.8079883 10.9786431  8.7976851 99.0213323\n [49] 59.1460075 44.2164646 54.4548418 42.1205293  1.4002525 36.4343556\n [55] 35.5599088 84.8886137  8.2157600 82.6872953 45.1546091 92.1759529\n [61] 53.7526680  5.7502143 74.6439151 37.7606502 56.6826358 42.7893124\n [67] 88.6639115  8.0072669 28.5926506 97.7251843 73.1564247 91.1857953\n [73] 28.9698689 73.7019798 71.5824657 69.2111972 77.2937644 17.1498989\n [79] 66.2388874 62.1702486 47.5984443 11.0783448 48.8793500 16.2428285\n [85] 10.7575518 47.3800598  8.9071838 50.4350245 58.8094410 43.6822130\n [91] 95.6646716 86.4926978 65.9957021 44.9295191 73.4480157  3.3766167\n [97] 64.7449806 28.1723492 83.1551350 47.1781888\n\n\n\n\n\n\n## mean\n\nmean_B <- function(x){\n  temp_sum <- 0\n  temp_length <- 0\n  for(i in x){\n  temp_sum <- temp_sum+i\n  temp_length <- temp_length+1\n  }\n  \n  return(temp_sum/temp_length)\n}\n\n\n## mode \n\ne <- c(1,1,1,1,1,2,3,4,5)\n\nmy_unique <- function(x){\n  unique_number <- c()\n  counter <- 0\n  for(i in x){\n    \n    test_unique <- i == unique_number\n    if(sum(test_unique) > 0) {\n      counter <- counter+1\n      unique_number[counter] <- unique_number\n    }\n    \n    print(sum(test_unique))\n    \n  }\n  \n  return(unique_number)\n}\n\n\n\n\n\n\n\n\n\n\n# Define the range of numbers\nnumbers <- 1:100\n\n# Loop through each number in the range\nfor (i in numbers) {\n  \n  # If the number is divisible by 3 and 5, print \"FizzBuzz\"\n  if (i %% 3 == 0 & i %% 5 == 0) {\n    print(\"FizzBuzz\")\n    \n  # If the number is divisible by 3, print \"Fizz\"\n  } else if (i %% 3 == 0) {\n    print(\"Fizz\")\n    \n  # If the number is divisible by 5, print \"Buzz\"\n  } else if (i %% 5 == 0) {\n    print(\"Buzz\")\n    \n  # Otherwise, print the number itself\n  } else {\n    print(i)\n  }\n}\n\n[1] 1\n[1] 2\n[1] \"Fizz\"\n[1] 4\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 7\n[1] 8\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 11\n[1] \"Fizz\"\n[1] 13\n[1] 14\n[1] \"FizzBuzz\"\n[1] 16\n[1] 17\n[1] \"Fizz\"\n[1] 19\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 22\n[1] 23\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 26\n[1] \"Fizz\"\n[1] 28\n[1] 29\n[1] \"FizzBuzz\"\n[1] 31\n[1] 32\n[1] \"Fizz\"\n[1] 34\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 37\n[1] 38\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 41\n[1] \"Fizz\"\n[1] 43\n[1] 44\n[1] \"FizzBuzz\"\n[1] 46\n[1] 47\n[1] \"Fizz\"\n[1] 49\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 52\n[1] 53\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 56\n[1] \"Fizz\"\n[1] 58\n[1] 59\n[1] \"FizzBuzz\"\n[1] 61\n[1] 62\n[1] \"Fizz\"\n[1] 64\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 67\n[1] 68\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 71\n[1] \"Fizz\"\n[1] 73\n[1] 74\n[1] \"FizzBuzz\"\n[1] 76\n[1] 77\n[1] \"Fizz\"\n[1] 79\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 82\n[1] 83\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 86\n[1] \"Fizz\"\n[1] 88\n[1] 89\n[1] \"FizzBuzz\"\n[1] 91\n[1] 92\n[1] \"Fizz\"\n[1] 94\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 97\n[1] 98\n[1] \"Fizz\"\n[1] \"Buzz\"\n\n\n\n\n\n\n# set the number of dice rolls\nnum_rolls <- 100\n\n# simulate rolling a six-sided dice\ndice_rolls <- sample(1:6, num_rolls, replace = TRUE)\n\n# print the results\nprint(dice_rolls)\n\n  [1] 5 4 4 3 1 2 3 5 6 5 4 2 1 6 6 6 2 1 6 5 2 1 3 4 6 3 3 2 4 6 6 5 6 4 4 2 2\n [38] 2 5 5 2 3 3 6 1 3 3 2 3 4 3 4 1 2 3 1 5 2 6 5 4 2 6 5 4 2 3 2 4 3 6 2 1 4\n [75] 6 2 6 1 3 3 2 3 4 6 4 3 6 4 4 4 6 5 1 4 5 3 3 3 1 4\n\n\n\n\n\n\n# Set up the game board\ngame_board <- data.frame(\n  start = c(1, 4, 9, 16, 21, 28, 36, 44, 52, 67, 71, 80, 87),\n  end = c(38, 14, 31, 6, 42, 84, 44, 26, 72, 86, 91, 100, 24)\n)\n\n# Define a function to simulate a single turn\nsimulate_turn <- function(current_position) {\n  # Roll the dice\n  dice_roll <- sample(1:6, 1)\n\n  # Move the player\n  new_position <- current_position + dice_roll\n\n  # Check for a ladder or snake\n  ladder_or_snake <- which(game_board$start == new_position)\n  if (length(ladder_or_snake) > 0) {\n    new_position <- game_board$end[ladder_or_snake]\n    message(paste0(\"Landed on a ladder! Moving to position \", new_position, \".\"))\n  } else {\n    ladder_or_snake <- which(game_board$end == new_position)\n    if (length(ladder_or_snake) > 0) {\n      new_position <- game_board$start[ladder_or_snake]\n      message(paste0(\"Landed on a snake! Moving to position \", new_position, \".\"))\n    }\n  }\n\n  # Make sure the player didn't go past the end of the board\n  if (new_position > 100) {\n    new_position <- current_position\n  }\n\n  # Return the new position\n  return(new_position)\n}\n\n# Define a function to simulate a full game\nsimulate_game <- function() {\n  # Initialize the game\n  position <- 0\n  turns <- 0\n\n  # Loop until the player reaches the end of the board\n  while (position < 100) {\n    # Simulate a turn\n    position <- simulate_turn(position)\n    turns <- turns + 1\n\n    # Print the current position\n    message(paste0(\"Current position: \", position, \".\"))\n  }\n\n  # Print the number of turns it took to win\n  message(paste0(\"You won in \", turns, \" turns!\"))\n}\n\n# Run the game\nsimulate_game()\n\nCurrent position: 3.\n\n\nLanded on a snake! Moving to position 16.\n\n\nCurrent position: 16.\n\n\nCurrent position: 17.\n\n\nCurrent position: 20.\n\n\nCurrent position: 22.\n\n\nCurrent position: 23.\n\n\nCurrent position: 29.\n\n\nLanded on a snake! Moving to position 9.\n\n\nCurrent position: 9.\n\n\nCurrent position: 11.\n\n\nCurrent position: 12.\n\n\nLanded on a ladder! Moving to position 6.\n\n\nCurrent position: 6.\n\n\nCurrent position: 10.\n\n\nLanded on a snake! Moving to position 4.\n\n\nCurrent position: 4.\n\n\nCurrent position: 10.\n\n\nCurrent position: 13.\n\n\nLanded on a ladder! Moving to position 6.\n\n\nCurrent position: 6.\n\n\nCurrent position: 12.\n\n\nLanded on a ladder! Moving to position 6.\n\n\nCurrent position: 6.\n\n\nCurrent position: 8.\n\n\nLanded on a snake! Moving to position 4.\n\n\nCurrent position: 4.\n\n\nLanded on a ladder! Moving to position 31.\n\n\nCurrent position: 31.\n\n\nCurrent position: 35.\n\n\nCurrent position: 39.\n\n\nCurrent position: 40.\n\n\nCurrent position: 43.\n\n\nCurrent position: 47.\n\n\nCurrent position: 50.\n\n\nCurrent position: 54.\n\n\nCurrent position: 57.\n\n\nCurrent position: 60.\n\n\nCurrent position: 66.\n\n\nLanded on a snake! Moving to position 52.\n\n\nCurrent position: 52.\n\n\nCurrent position: 58.\n\n\nCurrent position: 60.\n\n\nCurrent position: 63.\n\n\nCurrent position: 64.\n\n\nCurrent position: 65.\n\n\nLanded on a ladder! Moving to position 86.\n\n\nCurrent position: 86.\n\n\nCurrent position: 88.\n\n\nCurrent position: 93.\n\n\nCurrent position: 99.\n\n\nLanded on a snake! Moving to position 80.\n\n\nCurrent position: 80.\n\n\nLanded on a snake! Moving to position 28.\n\n\nCurrent position: 28.\n\n\nLanded on a snake! Moving to position 9.\n\n\nCurrent position: 9.\n\n\nLanded on a snake! Moving to position 4.\n\n\nCurrent position: 4.\n\n\nCurrent position: 10.\n\n\nLanded on a snake! Moving to position 4.\n\n\nCurrent position: 4.\n\n\nCurrent position: 8.\n\n\nLanded on a ladder! Moving to position 31.\n\n\nCurrent position: 31.\n\n\nCurrent position: 35.\n\n\nCurrent position: 40.\n\n\nCurrent position: 41.\n\n\nCurrent position: 46.\n\n\nCurrent position: 50.\n\n\nLanded on a ladder! Moving to position 72.\n\n\nCurrent position: 72.\n\n\nCurrent position: 78.\n\n\nCurrent position: 79.\n\n\nLanded on a ladder! Moving to position 100.\n\n\nCurrent position: 100.\n\n\nYou won in 58 turns!"
  },
  {
    "objectID": "posts/tip-sheet/index.html",
    "href": "posts/tip-sheet/index.html",
    "title": "My Tip Sheet for Week 2",
    "section": "",
    "text": "Tips:\nHow to make new blog post:\n\nopen blog in Rstudio, find posts folder, copy post and save as new post name\n\nHow to commit and push changes to github:\n\nmake change, render website via Rstudio, commit in github desktop w/ commit msg, push to github.com"
  },
  {
    "objectID": "posts/week-3/index.html",
    "href": "posts/week-3/index.html",
    "title": "Week 3 qmd skills",
    "section": "",
    "text": "1\n\nBe able to make a new .qmd document\n\nyes. - green plus icons or from file menu.\n\n\n2\n\nBe able to render a .qmd document\n\nyes. - through render button.\n\n\n3\n\nExplain the difference between the source editor view and visual editor view in Rstudio.\n\nsource view is plain text characters, visual view is rendered form of plain text that’s interpreted to a formatted markdown.\n\n\n4\n\nBe able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\n\nThis is a header\n\ntest text incoming:\n\nregular test of a text , regular test of a fancy test\nquick maths: 450 6538 12500000\n\nhaha jk why is this purple\n\n\n\n\n\n\n5\n\nBe aware of resources to help you learn more about markdown options.\n\n![Caption](image.png)\n\\(insert math equation here\\) \\(x=1\\)\ngrey square maker\nhttps://www.google.com\n\n\n6\n\nBe able to insert an R code chunk, and show the output in the rendered document.\n\n-macro for quick insert Running R code chunks in a qmd pressing play copy/paste into console highlight then command-enter (mac) precedence issues (first to last)\nalt + ctrl + i , shortcut to make R space block thingy\n\ncat(\"hello \")\n\nhello \n\ncat(\"pressing play runs the chunk into the console\")\n\npressing play runs the chunk into the console\n\n2+2\n\n[1] 4\n\n\n\n1:10\n1:5\n1:20\n\ncan highlight portion of code in R chunk, type ctrl + enter to run selected part(s)\nsyntax for R chunk #| and press tab to see options for parameters\n\n\n7\n\nBe aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n\nhist(mtcars$mpg)\n\n\n\n\"b\" + 5\n\nError in \"b\" + 5: non-numeric argument to binary operator\n\n\n\nlibrary(dplyr)\n\n\n\n8\n\nBe able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\nyes, using execute in top-level yml - chunk options > global options\n\n\n\n9\n\nWrite inline r code.\n8\nMy weekly MTA fare is 11 dollars.\n\n\n\n10\n\nExplain how the rendering environment is different from the Rstudio environment.\n\n\na <- 50\nb <- 100\n\nc <- a+b\n\nrestarting R restarts the Rstudio environment as new, the rendering environment is its own separate R\n\n\n11\n\nBe aware of more advanced quarto options for html documents, and try some of the options. :("
  },
  {
    "objectID": "posts/week-4/index.html",
    "href": "posts/week-4/index.html",
    "title": "Week 4 data vis",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union"
  },
  {
    "objectID": "posts/week-4/index.html#data-types",
    "href": "posts/week-4/index.html#data-types",
    "title": "Week 4 data vis",
    "section": "Data Types",
    "text": "Data Types\n\na <- 2.5 # assigning character/variable\n\nclass(a) # find out it's numeric\n\n[1] \"numeric\"\n\ntypeof(a) # find out it's a double\n\n[1] \"double\"\n\nis.integer(a) # find out it's not an integer (integers don't have decimals)\n\n[1] FALSE\n\nas.integer(a) # rounds (2.5) down to an integer (2)\n\n[1] 2\n\nis.character(a) # find out if it's character or not\n\n[1] FALSE\n\n\n\ninteger(length = 5)\n\n[1] 0 0 0 0 0\n\nnumeric(length = 5)\n\n[1] 0 0 0 0 0\n\n\n\n# logical/boolean\ntypeof(TRUE) # uppercase true makes logical variables\n\n[1] \"logical\"\n\nclass(TRUE) \n\n[1] \"logical\"\n\nis.logical(FALSE) # same with uppercase false\n\n[1] TRUE\n\nas.logical(1) # one will be seen as true\n\n[1] TRUE\n\nas.logical(0) # zero will be seen as false\n\n[1] FALSE\n\nlogical(length = 3) # initializes logical vector three times\n\n[1] FALSE FALSE FALSE"
  },
  {
    "objectID": "posts/week-4/index.html#tidy-data",
    "href": "posts/week-4/index.html#tidy-data",
    "title": "Week 4 data vis",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n# tidy data must have every column a variable, every row an observation, and every cell a single value\nlibrary(tidyr)\n\natla <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\", \"Zuko\", \"Azula\", \"Suki\", \"Princess Yue\"),\n  bends = c(\"water\", \"earth\", NA, \"fire\", \"fire\", NA, \"water\"),\n  friendly = c(TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE),\n  nation = c(\"water tribe\",\"earth kingdom\",\"water tribe\",\"fire nation\",\"fire nation\",\"earth kingdom\",\"water tribe\"),\n  personal_rating = c(7,10,5,8,2,10,6) # out of ten\n)\natla # tibble name prints table\n\n# A tibble: 7 × 5\n  name         bends friendly nation        personal_rating\n  <chr>        <chr> <lgl>    <chr>                   <dbl>\n1 Katara       water TRUE     water tribe                 7\n2 Toph         earth TRUE     earth kingdom              10\n3 Sokka        <NA>  TRUE     water tribe                 5\n4 Zuko         fire  TRUE     fire nation                 8\n5 Azula        fire  FALSE    fire nation                 2\n6 Suki         <NA>  TRUE     earth kingdom              10\n7 Princess Yue water TRUE     water tribe                 6\n\ntidyr::as_tibble(atla)\n\n# A tibble: 7 × 5\n  name         bends friendly nation        personal_rating\n  <chr>        <chr> <lgl>    <chr>                   <dbl>\n1 Katara       water TRUE     water tribe                 7\n2 Toph         earth TRUE     earth kingdom              10\n3 Sokka        <NA>  TRUE     water tribe                 5\n4 Zuko         fire  TRUE     fire nation                 8\n5 Azula        fire  FALSE    fire nation                 2\n6 Suki         <NA>  TRUE     earth kingdom              10\n7 Princess Yue water TRUE     water tribe                 6"
  },
  {
    "objectID": "posts/week-4/index.html#ggplot2",
    "href": "posts/week-4/index.html#ggplot2",
    "title": "Week 4 data vis",
    "section": "ggplot2",
    "text": "ggplot2\n\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\", show_col_types = FALSE)\n\n\nggplot()\n\n\n\nggplot(data = survey_data, mapping = aes(x = wait_time, y = satisfaction))\n\n\n\nggplot(survey_data, aes(x = wait_time, y = satisfaction)) + geom_point(color=\"red\", shape=18, size = 5) + geom_point(color=\"black\", shape=18, size = 3) + geom_smooth(method = \"lm\", color=\"green\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(survey_data, aes(x = wait_time, y = satisfaction, color = wait_time, size = satisfaction)) + geom_point()\n\n\n\nmin(survey_data$wait_time)\n\n[1] 23\n\nmax(survey_data$wait_time)\n\n[1] 314\n\nlength(survey_data$wait_time)\n\n[1] 707\n\n\n\nggplot(data=survey_data, mapping= aes(x=wait_time)) + geom_histogram(bins=50, color=\"orange\")"
  },
  {
    "objectID": "posts/week-5/index.html",
    "href": "posts/week-5/index.html",
    "title": "Week 5 data import",
    "section": "",
    "text": "library(tidyverse)     # includes readr & tibble\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\nlibrary(googlesheets4) # for Google Sheets\n\n\n# list datasets built in to base R\ndata()\n\n# lists datasets in a specific package\ndata(package = \"tidyr\")\n\n\nglimpse(cars)\n\nRows: 50\nColumns: 2\n$ speed <dbl> 4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13…\n$ dist  <dbl> 2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34…\n\n# call print explicitly\nprint(table1)\n\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n# more common method of just calling object name\ntable1\n\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\ntibble::glimpse(table1)\n\nRows: 6\nColumns: 4\n$ country    <chr> \"Afghanistan\", \"Afghanistan\", \"Brazil\", \"Brazil\", \"China\", …\n$ year       <dbl> 1999, 2000, 1999, 2000, 1999, 2000\n$ cases      <dbl> 745, 2666, 37737, 80488, 212258, 213766\n$ population <dbl> 19987071, 20595360, 172006362, 174504898, 1272915272, 12804…\n\nsummary(table1)\n\n   country               year          cases          population       \n Length:6           Min.   :1999   Min.   :   745   Min.   :1.999e+07  \n Class :character   1st Qu.:1999   1st Qu.: 11434   1st Qu.:5.845e+07  \n Mode  :character   Median :2000   Median : 59113   Median :1.733e+08  \n                    Mean   :2000   Mean   : 91277   Mean   :4.901e+08  \n                    3rd Qu.:2000   3rd Qu.:179316   3rd Qu.:9.983e+08  \n                    Max.   :2000   Max.   :213766   Max.   :1.280e+09  \n\n\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\n\nlibrary(summarytools)\n\n\nAttaching package: 'summarytools'\n\n\nThe following object is masked from 'package:tibble':\n\n    view\n\n\n\nlibrary(rio)\n\ndemo_tsv <- import(file = \"data/demo.tsv\")\ndemo_csv  <- import(\"data/demo.csv\")  # comma-separated values\ndemo_xls  <- import(\"data/demo.xlsx\") # Excel format\ndemo_sav  <- import(\"data/demo.sav\")  # SPSS format\n\ndemo_tsv$factor <- as.factor(demo_tsv$factor)\n\nglimpse(demo_tsv)\n\nRows: 6\nColumns: 6\n$ character <chr> \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    <fct> high, low, med, high, low, med\n$ integer   <int> 1, 2, 3, 4, 5, 6\n$ double    <dbl> 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   <lgl> TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      <IDate> 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\ndemo_tsv$character\n\n[1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\"\n\ndemo_tsv$factor\n\n[1] high low  med  high low  med \nLevels: high low med\n\n\n\ngs4_deauth() # skip authorisation for public data\n\ndemo_gs4  <- googlesheets4::read_sheet(\n  ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\")\n\n✔ Reading from \"demo\".\n\n\n✔ Range 'Sheet1'.\n\n\n\navatar <- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE,\n  numbers = c(1,2,3),\n  more_numbers = 1:3,\n)\n\n# print it\navatar\n\n# A tibble: 3 × 5\n  name   bends friendly numbers more_numbers\n  <chr>  <chr> <lgl>      <dbl>        <int>\n1 Katara water TRUE           1            1\n2 Toph   earth TRUE           2            2\n3 Sokka  <NA>  TRUE           3            3\n\n\n\navatar_by_row <- tribble(\n  ~name,    ~bends,  ~friendly, ~numbers,\n  \"Katara\", \"water\", TRUE, 1L,\n  \"Toph\",   \"earth\", TRUE, 2L,\n  \"Sokka\",  NA,      TRUE, 3L\n)\n\navatar_by_row\n\n# A tibble: 3 × 4\n  name   bends friendly numbers\n  <chr>  <chr> <lgl>      <int>\n1 Katara water TRUE           1\n2 Toph   earth TRUE           2\n3 Sokka  <NA>  TRUE           3\n\n\n\nrio::export(avatar, \"data/avatar.csv\")\n\n\ngs4_auth(email = \"leultimateruler@gmail.com\")\n\n# create a new sheet\nsheet_id <- gs4_create(name = \"demo-file\", \n                       sheets = \"letters\")\n\n✔ Creating new Sheet: \"demo-file\".\n\n# define the data table to save\nletter_data <- tibble(\n  character = LETTERS[1:5],\n  integer = 1:5,\n  double = c(1.1, 2.2, 3.3, 4.4, 5.5),\n  logical = c(T, F, T, F, T),\n  date = lubridate::today()\n)\n\nwrite_sheet(data = letter_data, \n            ss = sheet_id, \n            sheet = \"letters\")\n\n✔ Writing to \"demo-file\".\n\n\n✔ Writing to sheet 'letters'.\n\n## append some data\nnew_data <- tibble(\n  character = \"F\",\n  integer = 6L,\n  double = 6.6,\n  logical = FALSE,\n  date = lubridate::today()\n)\nsheet_append(data = new_data,\n             ss = sheet_id,\n             sheet = \"letters\")\n\n✔ Writing to \"demo-file\".\n\n\n✔ Appending 1 row to 'letters'.\n\n# read the data\ndemo <- read_sheet(ss = sheet_id, sheet = \"letters\")\n\n✔ Reading from \"demo-file\".\n\n\n✔ Range ''letters''."
  },
  {
    "objectID": "posts/week-5a-testing/index.html",
    "href": "posts/week-5a-testing/index.html",
    "title": "Week 5a Test",
    "section": "",
    "text": "loops & logic\n\n1 == 1\n\n[1] TRUE\n\n1 == 2\n\n[1] FALSE\n\nc(1, 2, 3) == c(2, 1, 3)\n\n[1] FALSE FALSE  TRUE\n\n1 == c(2, 1, 3)\n\n[1] FALSE  TRUE FALSE\n\n\n\n1 != 1\n\n[1] FALSE\n\n1 != 2\n\n[1] TRUE\n\n\n\n1 > 1\n\n[1] FALSE\n\n5 > 1\n\n[1] TRUE\n\n3 < 2\n\n[1] FALSE\n\n3 < 1\n\n[1] FALSE\n\nc(1, 2 ,3) > c(2, 1, 3)\n\n[1] FALSE  TRUE FALSE\n\n\n\n1 >= 1\n\n[1] TRUE\n\n5 >= 1\n\n[1] TRUE\n\n3 <= 2\n\n[1] FALSE\n\n\n\n# is 16 divisible by 4 AND 8\n16 %% 4 == 0 & 16 %% 8 == 0\n\n[1] TRUE\n\n16 %% 4 == 0 & 16 %% 3 == 0\n\n[1] FALSE\n\n16 %% 4 == 0 & 16 %% 8 == 0 & 16 %% 2 == 0\n\n[1] TRUE\n\n\n\n16 %% 4 == 0 | 16 %% 8 == 0\n\n[1] TRUE\n\n\n\n\nif else statements\n\na <- 1 # defines a to be a 1\n\nif (a == 1) {\n  print(a) # this happens if a == 1\n} else {\n  print(\"A is not 1\") # this happens if a is not 1\n}\n\n[1] 1\n\nif (a == 2) {\n    print(a)\n} else {\n  print(\"Hello world\")\n  }\n\n[1] \"Hello world\"\n\n\n\n# for loop\n\na <- c(1, 0, 1, 0, 0, 0, 1)\n\nfor (i in a) {\n  \n  if (i == 1) {\n    print(\"I'm a 1\")\n  } else {\n    print(\"I'm not a 1\")\n  }\n}\n\n[1] \"I'm a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm a 1\"\n\n\nbasic syntax = for(){}, for(loop control){ loop steps: iterator <- vector1break` stops a loop\n\n\nwhile loops\n\ni <- 1\nwhile (i < 6) {\n  print(i)\n  i <- i + 1 # adds one each step of loop\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n\nrepeat loops\n\ni <- 0\nrepeat {\n  i <- i + 1\n  print(i)\n  if (i == 5) {\n    break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\nbraces not needed on one line"
  },
  {
    "objectID": "posts/week-6/index.html",
    "href": "posts/week-6/index.html",
    "title": "Week 6 data summaries",
    "section": "",
    "text": "library(tidyverse)   # data wrangling functions\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(kableExtra)  # for nice tables\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\n\ntweets <- readRDS(\"ncod_tweets.rds\")\n\nglimpse(tweets)\n\nRows: 28,626\nColumns: 90\n$ user_id                 <chr> \"1407407384146948116\", \"986008595622920193\", \"…\n$ status_id               <chr> \"1448018751828398082\", \"1448018601689194502\", …\n$ created_at              <dttm> 2021-10-12 20:12:27, 2021-10-12 20:11:52, 202…\n$ screen_name             <chr> \"Seanachaidh10\", \"_blayne__\", \"ShiguSquad\", \"M…\n$ text                    <chr> \"#LGBTQ #LGBT #Diversity #inclusion #NationalC…\n$ source                  <chr> \"Twitter for Android\", \"Twitter for iPhone\", \"…\n$ display_text_width      <dbl> 139, 52, 72, 179, 243, 196, 260, 233, 273, 75,…\n$ reply_to_status_id      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ reply_to_user_id        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ reply_to_screen_name    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ is_quote                <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ is_retweet              <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ favorite_count          <int> 0, 0, 0, 0, 0, 2, 0, 1, 3, 0, 9, 5, 0, 0, 2, 1…\n$ retweet_count           <int> 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ quote_count             <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ reply_count             <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ hashtags                <list> <\"LGBTQ\", \"LGBT\", \"Diversity\", \"inclusion\", \"…\n$ symbols                 <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ urls_url                <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ urls_t.co               <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ urls_expanded_url       <list> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ media_url               <list> \"http://pbs.twimg.com/media/FBhlYbGWUAA1Y6Y.j…\n$ media_t.co              <list> \"https://t.co/EnqHdxOVtX\", \"https://t.co/TVca…\n$ media_expanded_url      <list> \"https://twitter.com/Seanachaidh10/status/144…\n$ media_type              <list> \"photo\", \"photo\", NA, NA, \"photo\", NA, \"photo…\n$ ext_media_url           <list> \"http://pbs.twimg.com/media/FBhlYbGWUAA1Y6Y.j…\n$ ext_media_t.co          <list> \"https://t.co/EnqHdxOVtX\", <\"https://t.co/TVc…\n$ ext_media_expanded_url  <list> \"https://twitter.com/Seanachaidh10/status/144…\n$ ext_media_type          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ mentions_user_id        <list> NA, NA, NA, NA, NA, NA, <\"1425689378953654272…\n$ mentions_screen_name    <list> NA, NA, NA, NA, NA, NA, <\"NeerajDasi1\", \"Bein…\n$ lang                    <chr> \"und\", \"en\", \"en\", \"en\", \"und\", \"en\", \"en\", \"e…\n$ quoted_status_id        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_text             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_created_at       <dttm> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ quoted_source           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_favorite_count   <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_retweet_count    <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_user_id          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_screen_name      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_name             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_followers_count  <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_friends_count    <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_statuses_count   <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_location         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_description      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ quoted_verified         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_status_id       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_text            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_created_at      <dttm> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ retweet_source          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_favorite_count  <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_retweet_count   <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_user_id         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_screen_name     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_name            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_followers_count <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_friends_count   <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_statuses_count  <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_location        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_description     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ retweet_verified        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ place_url               <chr> NA, NA, NA, NA, NA, NA, \"https://api.twitter.c…\n$ place_name              <chr> NA, NA, NA, NA, NA, NA, \"Itaunja\", NA, NA, NA,…\n$ place_full_name         <chr> NA, NA, NA, NA, NA, NA, \"Itaunja\", NA, NA, NA,…\n$ place_type              <chr> NA, NA, NA, NA, NA, NA, \"poi\", NA, NA, NA, NA,…\n$ country                 <chr> NA, NA, NA, NA, NA, NA, \"India\", NA, NA, NA, N…\n$ country_code            <chr> NA, NA, NA, NA, NA, NA, \"IN\", NA, NA, NA, NA, …\n$ geo_coords              <list> <NA, NA>, <NA, NA>, <NA, NA>, <NA, NA>, <NA, …\n$ coords_coords           <list> <NA, NA>, <NA, NA>, <NA, NA>, <NA, NA>, <NA, …\n$ bbox_coords             <list> <NA, NA, NA, NA, NA, NA, NA, NA>, <NA, NA, NA…\n$ status_url              <chr> \"https://twitter.com/Seanachaidh10/status/1448…\n$ name                    <chr> \"Sean Armstrong⚽✒🎧\", \"Blayne\", \"Karl aka Lin…\n$ location                <chr> \"Pittsburgh, PA\", \"\", \"London, Ontario\", \"Mass…\n$ description             <chr> \"⚽ #Author of Ace of Clubs (Expected publicat…\n$ url                     <chr> \"https://t.co/XBWuEUMTPP\", NA, NA, \"https://t.…\n$ protected               <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ followers_count         <int> 301, 108, 806, 1315, 202, 92, 261, 79, 7520, 1…\n$ friends_count           <int> 152, 181, 2468, 362, 5003, 259, 515, 177, 416,…\n$ listed_count            <int> 0, 0, 6, 0, 0, 1, 0, 0, 11, 1, 7, 4, 7, 8, 8, …\n$ statuses_count          <int> 206, 254, 26983, 3166, 44820, 2858, 1012, 1049…\n$ favourites_count        <int> 325, 8537, 120476, 8668, 18220, 12039, 153, 45…\n$ account_created_at      <dttm> 2021-06-22 18:37:32, 2018-04-16 22:29:03, 201…\n$ verified                <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ profile_url             <chr> \"https://t.co/XBWuEUMTPP\", NA, NA, \"https://t.…\n$ profile_expanded_url    <chr> \"https://www.seanachaidh.me/\", NA, NA, \"http:/…\n$ account_lang            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ profile_banner_url      <chr> \"https://pbs.twimg.com/profile_banners/1407407…\n$ profile_background_url  <chr> NA, NA, NA, \"http://abs.twimg.com/images/theme…\n$ profile_image_url       <chr> \"http://pbs.twimg.com/profile_images/140740748…\n\nhist(tweets$favorite_count) #fast way to get histogram\n\n\n\nggplot(tweets, aes(x=favorite_count))+geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nlibrary(dplyr)\n\nfiltered_data <- tweets %>%\n  filter(favorite_count < 100) # thingy called pipe operator, sends data into next step aka filter\n\nggplot(tweets, aes(x=favorite_count))+geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nfavourite_summary <- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count),\n                           sd_favs = sd(favorite_count),\n                           mean_RTs = mean(retweet_count),\n                           median_RTs = median(retweet_count),\n                           min_RTs = min(retweet_count),\n                           max_RTs = max(retweet_count),\n                           sd_RTs = sd(favorite_count))\n\nfavourite_summary\n\n# A tibble: 1 × 10\n  mean_…¹ media…² min_f…³ max_f…⁴ sd_favs mean_…⁵ media…⁶ min_RTs max_RTs sd_RTs\n    <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>   <int>   <int>  <dbl>\n1    29.7       3       0   22935    330.    3.17       0       0    2525   330.\n# … with abbreviated variable names ¹​mean_favs, ²​median_favs, ³​min_favs,\n#   ⁴​max_favs, ⁵​mean_RTs, ⁶​median_RTs\n\n\n\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n\n\n\n\n\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(),\n            min_date = min(created_at),\n            max_date = max(created_at))\n\nglimpse(tweet_summary)\n\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n\n\n\ndate_from <- tweet_summary$min_date %>% # inline code\n  format(\"%d %B, %Y\")\ndate_to <- tweet_summary$max_date %>% \n  format(\"%d %B, %Y\")\n\n\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  <chr>           <int>\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23\n\n\n\nunique_users <- nrow(tweets_per_user)\nmost_prolific <- slice(tweets_per_user, 1) %>% \n  pull(screen_name)\nmost_prolific_n <- slice(tweets_per_user, 1) %>% \n  pull(n)\n\n\ntweets_grouped <- tweets %>%\n  group_by(verified)\n\nverified <- tweets_grouped %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nverified\n\n# A tibble: 2 × 4\n  verified count mean_favs mean_retweets\n  <lgl>    <int>     <dbl>         <dbl>\n1 FALSE    26676      18.4          1.83\n2 TRUE      1950     184.          21.5"
  },
  {
    "objectID": "posts/week-6/index.html#extra-blogging-challenge",
    "href": "posts/week-6/index.html#extra-blogging-challenge",
    "title": "Week 6 data summaries",
    "section": "Extra blogging challenge",
    "text": "Extra blogging challenge\n\nlibrary(tidyverse)     # includes readr & tibble\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\n\n\ndata(package = \"tidyr\")\n\n\ndata_census <- import(\"2018_Central_Park_Squirrel_Census_-_Squirrel_Data.csv\")\n\n\nglimpse(data_census)\n\nRows: 3,023\nColumns: 31\n$ X                                            <dbl> -73.95613, -73.96886, -73…\n$ Y                                            <dbl> 40.79408, 40.78378, 40.77…\n$ `Unique Squirrel ID`                         <chr> \"37F-PM-1014-03\", \"21B-AM…\n$ Hectare                                      <chr> \"37F\", \"21B\", \"11B\", \"32E…\n$ Shift                                        <chr> \"PM\", \"AM\", \"PM\", \"PM\", \"…\n$ Date                                         <int> 10142018, 10192018, 10142…\n$ `Hectare Squirrel Number`                    <int> 3, 4, 8, 14, 5, 3, 2, 2, …\n$ Age                                          <chr> \"\", \"\", \"\", \"Adult\", \"Adu…\n$ `Primary Fur Color`                          <chr> \"\", \"\", \"Gray\", \"Gray\", \"…\n$ `Highlight Fur Color`                        <chr> \"\", \"\", \"\", \"\", \"Cinnamon…\n$ `Combination of Primary and Highlight Color` <chr> \"+\", \"+\", \"Gray+\", \"Gray+…\n$ `Color notes`                                <chr> \"\", \"\", \"\", \"Nothing sele…\n$ Location                                     <chr> \"\", \"\", \"Above Ground\", \"…\n$ `Above Ground Sighter Measurement`           <chr> \"\", \"\", \"10\", \"\", \"\", \"\",…\n$ `Specific Location`                          <chr> \"\", \"\", \"\", \"\", \"on tree …\n$ Running                                      <lgl> FALSE, FALSE, FALSE, FALS…\n$ Chasing                                      <lgl> FALSE, FALSE, TRUE, FALSE…\n$ Climbing                                     <lgl> FALSE, FALSE, FALSE, FALS…\n$ Eating                                       <lgl> FALSE, FALSE, FALSE, TRUE…\n$ Foraging                                     <lgl> FALSE, FALSE, FALSE, TRUE…\n$ `Other Activities`                           <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ Kuks                                         <lgl> FALSE, FALSE, FALSE, FALS…\n$ Quaas                                        <lgl> FALSE, FALSE, FALSE, FALS…\n$ Moans                                        <lgl> FALSE, FALSE, FALSE, FALS…\n$ `Tail flags`                                 <lgl> FALSE, FALSE, FALSE, FALS…\n$ `Tail twitches`                              <lgl> FALSE, FALSE, FALSE, FALS…\n$ Approaches                                   <lgl> FALSE, FALSE, FALSE, FALS…\n$ Indifferent                                  <lgl> FALSE, FALSE, FALSE, FALS…\n$ `Runs from`                                  <lgl> FALSE, FALSE, FALSE, TRUE…\n$ `Other Interactions`                         <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ `Lat/Long`                                   <chr> \"POINT (-73.9561344937861…\n\nsquirrel <- data_census$`Unique Squirrel ID`\ncolor <- data_census$`Primary Fur Color`\nfood <- data_census$Eating\n\n\nggplot(data_census, aes(x = squirrel, y = color)) + geom_point(color=\"black\", shape=18, size = 4) + geom_point(color=\"lightgreen\", shape=18, size = 2.5)\n\n\n\nggplot(data_census, aes(x = squirrel, y = food))+geom_col(linewidth = 3, fill = \"firebrick\")+scale_x_discrete(labels = abbreviate, limits = c(\"42C-AM-1007-02\",\"36E-AM-1013-02\",\"3F-PM-1013-03\", \"2F-PM-1014-03\", \"15G-PM-1019-01\",\"1I-PM-1012-04\",\"34A-PM-1013-04\"))+ggtitle(\"Was the squirrel eating?\")\n\nWarning: Removed 3016 rows containing missing values (`position_stack()`)."
  },
  {
    "objectID": "posts/week-7/index.html",
    "href": "posts/week-7/index.html",
    "title": "Week 7 more ggplot2",
    "section": "",
    "text": "library(ggplot2)\n\nX_axis<-c(1,10,25,38,49,54,63,69)\nY_axis<-c(8,15,24,32,40,58,61,69)\ndata_plot<-data.frame(X_axis,Y_axis)\n\nscatter<-ggplot(data_plot, aes(x=X_axis,y=Y_axis))+\n  geom_point(shape=18, size=4,color=\"blue\")+\n  geom_point(shape=18, size=2,color=\"yellow\")+\n  geom_smooth(method=\"lm\",se=FALSE, color=\"blue\", size=.5)+\n  xlab(\"This is the X axis plots\")+\n  ylab(\"This is the Y axis plots\")+\n  coord_cartesian(xlim=c(0,75), ylim=c(0,75))+\n  scale_x_continuous(breaks=seq(0,75,10), expand=c(0,0))+\n  scale_y_continuous(breaks=seq(0,75,10), expand=c(0,0))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nscatter\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\ndf <- data.frame(map=c(\"PL\", \"LS\", \"BE\", \"BD\", \"HN\", \"FE\", \"ST\", \"IX\", \"AT\", NA),\n                winrate=c(53.8, 45.5, 52.9, 48.3, 58.3, 16.7, 40.0, 40.0, 35.7, 0))\n\nlibrary(ggplot2)\n\nggplot(data=df, aes(x=map, y=winrate, group=1)) +\n  geom_line(linetype = \"dashed\",color=\"yellow\", linewidth=.75)+\n  geom_point(color = \"green\")+theme_dark(base_line_size = 1.75)+lims(y=c(0,100))\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n✔ purrr   1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ngrades <- c(2.5, 8, 4)\nstudents <- c(\"A\", \"B\", \"C\")\n\n# same number of vectors, can list into tibble\n\nstudent_performance <- tibble(students, grades)\n\n# alternative syntax\n\nstudent_performance <- tibble(\n  grades = c(2.5,8,4),\n  students = c(\"A\",\"B\",\"C\")\n  )\n\n# ggplot bar graph\nggplot(student_performance, aes(x = students, y = grades))+geom_bar(stat = \"identity\", width = 0.25, fill = \"white\", colour = \"blue\", linewidth = 1)+lims(y=c(0,10))+scale_y_continuous(breaks = 0:10, limits = c(0,10))+theme_bw(base_size = 14)+geom_text(label = grades, position = position_dodge(width  = .9), vjust = -0.4)+xlab(\"Students\")+ylab(\"Grades\")+ggtitle(\"Student Performance\")\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\n\ntier <- c(12.5, 12.5, 10, 2, 9, 6, 3, 7)\nagents <- c(\"Sova\", \"Killjoy\", \"Cypher\", \"Omen\", \"Raze\", \"Neon\", \"Chamber\", \"Harbor\")\nlimit <- c(.5,.5,.5,.5,.5,.5,.5,.5)\n\nval <- tibble(\n  tier = c(12.5, 12.5, 10, 2, 9, 6, 3, 7),\n  agents = c(\"Sova\", \"Killjoy\", \"Cypher\", \"Omen\", \"Raze\", \"Neon\", \"Chamber\", \"Harbor\")\n  )\n\n# ggplot bar graph\nggplot(val, aes(x = agents, y = tier))+geom_bar(stat = \"identity\", width = 0.5, fill = \"firebrick\", colour = \"black\", linewidth = 1)+lims(y=c(0,15))+scale_y_continuous(breaks = 0:15, limits = c(0,15))+theme_dark(base_size = 14)+geom_text(label = tier, position = position_dodge(width  = .9), vjust = -1.5)+xlab(\"Agents\")+ylab(\"Tier\")+ggtitle(\"Valorant Agents Tier List\")+\n  geom_errorbar(aes(ymin = tier - limit,\n                    ymax = tier + limit),\n                width = .2, position = position_dodge(width = .5))\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale."
  },
  {
    "objectID": "posts/week-8/index.html",
    "href": "posts/week-8/index.html",
    "title": "Week 8 data relations",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()"
  },
  {
    "objectID": "posts/week-8/index.html#dplyr-mutate",
    "href": "posts/week-8/index.html#dplyr-mutate",
    "title": "Week 8 data relations",
    "section": "Dplyr Mutate",
    "text": "Dplyr Mutate\n\norders_B <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n\n# adds new column\norders_B %>%\n  mutate(satisfaction = NA)\n\n# A tibble: 9 × 3\n     id items satisfaction\n  <dbl> <dbl> <lgl>       \n1     2    10 NA          \n2     3    18 NA          \n3     4    21 NA          \n4     4    23 NA          \n5     5     9 NA          \n6     5    11 NA          \n7     6    11 NA          \n8     6    12 NA          \n9     7     3 NA          \n\n# adds multiple new column\norders_B %>%\n  mutate(satisfaction = NA,\n         numbers = 1:9)\n\n# A tibble: 9 × 4\n     id items satisfaction numbers\n  <dbl> <dbl> <lgl>          <int>\n1     2    10 NA                 1\n2     3    18 NA                 2\n3     4    21 NA                 3\n4     4    23 NA                 4\n5     5     9 NA                 5\n6     5    11 NA                 6\n7     6    11 NA                 7\n8     6    12 NA                 8\n9     7     3 NA                 9\n\n# have to assign back to tibble to update\norders_B <- orders_B %>%\n  mutate(satisfaction = NA,\n         numbers = 1:9)\n\norders_B %>%\n  mutate(numbers_as_strings = as.character(numbers))\n\n# A tibble: 9 × 5\n     id items satisfaction numbers numbers_as_strings\n  <dbl> <dbl> <lgl>          <int> <chr>             \n1     2    10 NA                 1 1                 \n2     3    18 NA                 2 2                 \n3     4    21 NA                 3 3                 \n4     4    23 NA                 4 4                 \n5     5     9 NA                 5 5                 \n6     5    11 NA                 6 6                 \n7     6    11 NA                 7 7                 \n8     6    12 NA                 8 8                 \n9     7     3 NA                 9 9                 \n\n# math operation on columns\norders_B %>%\n  mutate(items_minus_id = items - id)\n\n# A tibble: 9 × 5\n     id items satisfaction numbers items_minus_id\n  <dbl> <dbl> <lgl>          <int>          <dbl>\n1     2    10 NA                 1              8\n2     3    18 NA                 2             15\n3     4    21 NA                 3             17\n4     4    23 NA                 4             19\n5     5     9 NA                 5              4\n6     5    11 NA                 6              6\n7     6    11 NA                 7              5\n8     6    12 NA                 8              6\n9     7     3 NA                 9             -4"
  },
  {
    "objectID": "posts/week-8/index.html#dplyr-filter",
    "href": "posts/week-8/index.html#dplyr-filter",
    "title": "Week 8 data relations",
    "section": "Dplyr Filter",
    "text": "Dplyr Filter\n\nfull_data <- full_join(customers, orders, by = \"id\")\n\nWarning in full_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n\nfull_data\n\n# A tibble: 10 × 4\n      id city       postcode items\n   <dbl> <chr>      <chr>    <dbl>\n 1     1 Port Ellen PA42 7DU    NA\n 2     2 Dufftown   AB55 4DH    10\n 3     3 <NA>       <NA>        18\n 4     4 Aberlour   AB38 7RY    21\n 5     4 Aberlour   AB38 7RY    23\n 6     5 Tobermory  PA75 6NR     9\n 7     5 Tobermory  PA75 6NR    11\n 8     6 <NA>       <NA>        11\n 9     6 <NA>       <NA>        12\n10     7 <NA>       <NA>         3\n\n# if row have number greater than 10, filters\nfull_data %>%\n  filter(items > 10) # column name w/ logical comparison\n\n# A tibble: 6 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     3 <NA>      <NA>        18\n2     4 Aberlour  AB38 7RY    21\n3     4 Aberlour  AB38 7RY    23\n4     5 Tobermory PA75 6NR    11\n5     6 <NA>      <NA>        11\n6     6 <NA>      <NA>        12\n\nfull_data %>%\n  filter(postcode == \"AB38 7RY\")\n\n# A tibble: 2 × 4\n     id city     postcode items\n  <dbl> <chr>    <chr>    <dbl>\n1     4 Aberlour AB38 7RY    21\n2     4 Aberlour AB38 7RY    23\n\n# filter uses & to show both post code with items greater\nfull_data %>%\n  filter(postcode == \"AB38 7RY\" & items > 21)\n\n# A tibble: 1 × 4\n     id city     postcode items\n  <dbl> <chr>    <chr>    <dbl>\n1     4 Aberlour AB38 7RY    23"
  },
  {
    "objectID": "posts/week-9-data report/index.html",
    "href": "posts/week-9-data report/index.html",
    "title": "Video Game Review Report",
    "section": "",
    "text": "Rows: 497,577\nColumns: 4\n$ rating       <int> 5, 4, 3, 2, 5, 4, 1, 5, 5, 4, 4, 1, 5, 5, 5, 4, 5, 1, 1, …\n$ verified     <lgl> TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, T…\n$ year         <int> 2015, 2015, 2015, 2015, 2014, 2014, 2014, 2014, 2014, 201…\n$ reviewerName <chr> \"Ambrosia075\", \"travis\", \"Vincent G. Mezera\", \"Grandma KR…"
  },
  {
    "objectID": "posts/week-9-data report/index.html#number-of-reviews-per-year",
    "href": "posts/week-9-data report/index.html#number-of-reviews-per-year",
    "title": "Video Game Review Report",
    "section": "Number of reviews per year",
    "text": "Number of reviews per year\nThe below histogram shows the number of video game reviews submitted to Amazon by year. From 1999 reviews largely increased year-on-year which is unsurprising given the growth of Amazon and access to the internet. The dataset shows the peak number of reviews was 2015 with a decline from 2016 to 2018. It is likely that this reflects the dataset being incomplete for recent years rather than the number of reviews declining in reality."
  },
  {
    "objectID": "posts/week-9-data report/index.html#verified-users",
    "href": "posts/week-9-data report/index.html#verified-users",
    "title": "Video Game Review Report",
    "section": "Verified users",
    "text": "Verified users\nThe dataset contains details of whether the review was based on a verified purchase. From Amazon Community:\n\nAn “Amazon Verified Purchase” review means that we’ve verified that the person writing the review purchased the product from Amazon, and didn’t receive the product at a big discount. Reviews that are not marked “Amazon Verified Purchase” are valuable as well, but, either we cannot confirm that the product was purchased from Amazon, or that the customer paid a price that is available to most Amazon shoppers.\n\nTable 1 shows the number of reviews based on verified and unverified purchases.\n\n\n\n\n\nverified\ncounts\n\n\n\n\nFALSE\n164932\n\n\nTRUE\n332645\n\n\n\nTable 1. Number of reviews by purchase status\n\n\nWhilst the number of verified reviews is substantially larger than the number of unverified reviews, the below histogram demonstrates that this has not been a consistent trend and that the large increase in the number of reviews is largely driven by an increase in verified reviews."
  },
  {
    "objectID": "posts/week-9-data report/index.html#review-ratings",
    "href": "posts/week-9-data report/index.html#review-ratings",
    "title": "Video Game Review Report",
    "section": "Review ratings",
    "text": "Review ratings\n\nOverall\nAmazon review ratings are provided on a scale of 1 (worst) to 5 (best) stars. The histogram below shows the total number of reviews assigned each rating.\n\n#get number of reviews per rating\n\nreview_by_rating <- review_data %>%\n  group_by(rating) %>%\n  summarize(counts = n())\n\n#plot, aes sets up mapping X.Y, \n\nggplot(data = review_by_rating, mapping = aes(x=rating, y=counts))+\n  geom_bar(stat = \"identity\", fill = \"white\", color = \"black\")+\n  scale_y_continuous(breaks = 0:300000)+\n  xlab(\"\")+ylab(\"\")+\n  ggtitle(label = \"Review ratings\", subtitle = \"Number of Reviews for each rating\")+\n  theme(panel.grid.major=element_line(color = \"darkgrey\"), panel.grid.minor=element_line(color = \"lightgrey\"), panel.background = element_rect(fill = \"lightgrey\"))"
  },
  {
    "objectID": "posts/week-9-data report/index.html#overall",
    "href": "posts/week-9-data report/index.html#overall",
    "title": "Video Game Review Report",
    "section": "Overall",
    "text": "Overall\nAmazon review ratings are provided on a scale of 1 (worst) to 5 (best) stars. The histogram below shows the total number of reviews assigned each rating."
  },
  {
    "objectID": "posts/week-9-data report/index.html#by-purchase-status",
    "href": "posts/week-9-data report/index.html#by-purchase-status",
    "title": "Video Game Review Report",
    "section": "By purchase status",
    "text": "By purchase status\nHowever, if you break this data down by verified purchases status you can see that whilst the number of verified and unverified reviews with 1 to 4 star reviews are similar, there is a very large number of 5 star reviews for verified purchases compared to unverified purchases."
  },
  {
    "objectID": "posts/week-9-data report/index.html#by-purchase-status-1",
    "href": "posts/week-9-data report/index.html#by-purchase-status-1",
    "title": "Video Game Review Report",
    "section": "By purchase status",
    "text": "By purchase status\nAverage ratings for verified reviews were higher (both mean and median) than for unverified review, likely driven by the number of 5-star reviews for verified reviews.\n\n\n\n\n\nverified\nMean rating\nMedian rating\n\n\n\n\nFALSE\n3.91\n4\n\n\nTRUE\n4.37\n5"
  },
  {
    "objectID": "posts/week-9-data report/index.html#by-year-and-purchase-status",
    "href": "posts/week-9-data report/index.html#by-year-and-purchase-status",
    "title": "Video Game Review Report",
    "section": "By year and purchase status",
    "text": "By year and purchase status\nAverage ratings for verified purchases tended to increase over time, while average ratings for unverified purchases tended to decrease over time."
  }
]